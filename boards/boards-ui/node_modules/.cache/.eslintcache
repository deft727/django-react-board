[{"/home/user/Desktop/react_board/boards/boards-ui/src/index.js":"1","/home/user/Desktop/react_board/boards/boards-ui/src/App.js":"2","/home/user/Desktop/react_board/boards/boards-ui/src/reportWebVitals.js":"3","/home/user/Desktop/react_board/boards/boards-ui/src/components/table/Table.js":"4","/home/user/Desktop/react_board/boards/boards-ui/src/components/board_detail/BoardDetail.js":"5","/home/user/Desktop/react_board/boards/boards-ui/src/components/navbar/navbar.js":"6","/home/user/Desktop/react_board/boards/boards-ui/src/components/topic_detail/Topic.js":"7","/home/user/Desktop/react_board/boards/boards-ui/src/components/footer/footer.js":"8","/home/user/Desktop/react_board/boards/boards-ui/src/components/customers/CustomersList.js":"9","/home/user/Desktop/react_board/boards/boards-ui/src/components/customers/CustomerCreateUpdate.js":"10","/home/user/Desktop/react_board/boards/boards-ui/src/components/customers/CustomersService.js":"11","/home/user/Desktop/react_board/boards/boards-ui/src/components/InfoPages/infopages.js":"12","/home/user/Desktop/react_board/boards/boards-ui/src/components/auth/registerForm.js":"13","/home/user/Desktop/react_board/boards/boards-ui/src/components/auth/signUpform.js":"14","/home/user/Desktop/react_board/boards/boards-ui/src/components/account/my_account.js":"15","/home/user/Desktop/react_board/boards/boards-ui/src/components/Modal/modal.js":"16","/home/user/Desktop/react_board/boards/boards-ui/src/components/BoardForm/boardform.js":"17","/home/user/Desktop/react_board/boards/boards-ui/src/components/InfoModal/infomodal.js":"18","/home/user/Desktop/react_board/boards/boards-ui/src/components/NewTopic/newtopic.js":"19","/home/user/Desktop/react_board/boards/boards-ui/src/components/NewPost/newpost.js":"20","/home/user/Desktop/react_board/boards/boards-ui/src/components/account/my_account2.js":"21","/home/user/Desktop/react_board/boards/boards-ui/src/components/account/crop.js":"22","/home/user/Desktop/react_board/boards/boards-ui/src/components/account/modalcrop.js":"23","/home/user/Desktop/react_board/boards/boards-ui/src/components/account/Dialog.js":"24"},{"size":500,"mtime":1630322627617,"results":"25","hashOfConfig":"26"},{"size":1945,"mtime":1631200110016,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1630322627617,"results":"28","hashOfConfig":"26"},{"size":5357,"mtime":1631204120449,"results":"29","hashOfConfig":"26"},{"size":2650,"mtime":1631192679337,"results":"30","hashOfConfig":"26"},{"size":3940,"mtime":1630995438757,"results":"31","hashOfConfig":"26"},{"size":2502,"mtime":1631102245138,"results":"32","hashOfConfig":"26"},{"size":2869,"mtime":1631098714845,"results":"33","hashOfConfig":"26"},{"size":2262,"mtime":1630397200784,"results":"34","hashOfConfig":"26"},{"size":2192,"mtime":1630332560792,"results":"35","hashOfConfig":"26"},{"size":953,"mtime":1630328913715,"results":"36","hashOfConfig":"26"},{"size":751,"mtime":1630406952932,"results":"37","hashOfConfig":"26"},{"size":3028,"mtime":1630926566823,"results":"38","hashOfConfig":"26"},{"size":2478,"mtime":1630995745775,"results":"39","hashOfConfig":"26"},{"size":3178,"mtime":1630678443627,"results":"40","hashOfConfig":"26"},{"size":2757,"mtime":1631004997559,"results":"41","hashOfConfig":"26"},{"size":2727,"mtime":1630998866897,"results":"42","hashOfConfig":"26"},{"size":1434,"mtime":1631023876628,"results":"43","hashOfConfig":"26"},{"size":2962,"mtime":1631198582122,"results":"44","hashOfConfig":"26"},{"size":2515,"mtime":1631184134766,"results":"45","hashOfConfig":"26"},{"size":4243,"mtime":1631278145727,"results":"46","hashOfConfig":"26"},{"size":1132,"mtime":1631194994591,"results":"47","hashOfConfig":"26"},{"size":2362,"mtime":1631203955272,"results":"48","hashOfConfig":"26"},{"size":7260,"mtime":1631278027402,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"n0e9jd",{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/user/Desktop/react_board/boards/boards-ui/src/index.js",[],"/home/user/Desktop/react_board/boards/boards-ui/src/App.js",["116","117","118","119","120","121"],"import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Table from \"./components/table/Table\";\nimport {BrowserRouter as Router, Switch, Route, RedirectProps, Redirect} from \"react-router-dom\";\nimport BoardDetail from \"./components/board_detail/BoardDetail\";\nimport MyNavbar from \"./components/navbar/navbar\";\nimport TopicDetail from \"./components/topic_detail/Topic\";\nimport Footer from \"./components/footer/footer\";\nimport CustomersList from \"./components/customers/CustomersList\";\nimport  CustomerCreateUpdate  from './components/customers/CustomerCreateUpdate'\nimport InfoPageDetail from \"./components/InfoPages/infopages\";\nimport LoginFormik from \"./components/auth/signUpform\";\nimport RegisterPage from \"./components/auth/registerForm\";\nimport Profile from \"./components/account/my_account\";\nimport Profile2 from \"./components/account/my_account2\";\n\nimport NewTopic from \"./components/NewTopic/newtopic\"\nimport PicUploadNoCrop from \"./components/account/my_account2\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n <Router>\n    < MyNavbar />\n      <Switch>\n\n      <Route path=\"/auth/token/login/\" component={LoginFormik} />\n      <Route path=\"/auth/users/\" component={RegisterPage} />\n\n      <Route path=\"/pages/:id/\" component={InfoPageDetail} />\n      <Route path=\"/account/\" component={Profile2} />\n\n      <Route path=\"/customer-list/\" exact component={CustomersList} />\n      <Route path=\"/customer/:pk/\"  component={CustomerCreateUpdate} />\n      <Route path=\"/customer/\" exact component={CustomerCreateUpdate} />\n\n        <Route path=\"/board/:id/topic/:pk/\" exect component={TopicDetail} />\n\n        <Route path=\"/board/:id/\" exect component={BoardDetail} />\n        <Route path=\"/board/:id/new/\"  component={NewTopic} />\n        <Route path=\"\" exect component={Table} />\n\n      </Switch>\n     < Footer />\n</Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","/home/user/Desktop/react_board/boards/boards-ui/src/reportWebVitals.js",[],"/home/user/Desktop/react_board/boards/boards-ui/src/components/table/Table.js",["122","123","124","125","126"],"import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Link} from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport axios from 'axios';\nimport Cookies from 'js-cookie'\nimport ReactDOM from 'react-dom';\nimport { Button } from 'react-bootstrap';\nimport MyModal from \"../Modal/modal\";\nimport BoardForm from \"../BoardForm/boardform\";\nimport InfoModal from \"../InfoModal/infomodal\";\n\n\n\nfunction deleteboard(val) {\n}\nfunction Table(props) {\n  const [currentBoard, setCurrentBoard]  = useState(null);\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow =(bordId) =>{\n      console.log(bordId);\n      setShow(true);\n      setCurrentBoard(bordId);\n  }\nconst tokens = localStorage.tokens;\n\n\n  const [showBoard, setShowBoard] = useState(false);\n  const handleCloseBoard = () => setShowBoard(false);\n  const handleShowBoard =() =>{\n      setShowBoard(true);\n  }\n\n  const [showInfo, setShowInfo] = useState(false);\n  const handleCloseInfo = () => setShowInfo(false);\n  const handleShowInfo =() =>{\n      setShowInfo(true);\n  }\n\nconst [myhistory, setHistory] = useState([])\nconst [boards, SetBoards] = useState([])\n     useEffect(() => {\n            // let tokens = window.localStorage.getItem('tokens');\n            // console.log('tokens', Cookies.get('csrftoken') )\n            axios({\n                method: \"GET\",\n                headers: {\n                    'Authorization': `Token ${tokens}`,\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'csrftoken': Cookies.get('csrftoken'),\n                },\n                url: `http://127.0.0.1:8000/api/board/`\n            }).then(response => {\n                SetBoards(response.data.results);\n                setHistory(response.data.history)\n            })\n        }, []);\n\n            // console.log(history)\n\n    const deleteboard = (pk) => {\n        axios({\n            method: \"delete\",\n            headers: {\n                'Authorization': `Token ${tokens}`,\n                'Accept': 'application/json',\n            },\n            url: `http://127.0.0.1:8000/api/board/${pk}/`\n        }).then((response)=> {\n            // console.log(response)\n            if (response.status === 204) {\n             window.location.reload();\n             //    props.history.push(\"/\")\n            alert(\"Success\");\n\n            }\n            else {\n                            alert(\"Error\");\n\n            }\n    } )}\n\n        return (\n            <div className=\"App mt-5\">\n           {\n             !tokens ? null : ( <>\n<div className=\"d-flex p-2\">\n  <Button variant=\"success\" onClick={()=>handleShowBoard()}>New Board</Button> &nbsp;\n\n  <Button variant=\"secondary\" onClick={()=>handleShowInfo(myhistory)}> Last info </Button>\n\n  {showBoard && <BoardForm open={showBoard}  handleCloseBoard={handleCloseBoard}/>}\n  {showInfo && <InfoModal openInfo={showInfo}  handleCloseInfo={handleCloseInfo} myhistory={myhistory}/>}\n\n  </div>\n             </>)\n                 }\n                <table className=\"table table-bordered m-1\">\n                    <thead>\n                    <tr>\n                        <th scope=\"col\">Board</th>\n                        <th scope=\"col\">Topics</th>\n                        <th scope=\"col\">Posts</th>\n                        <th scope=\"col\">Last Post</th>\n                        { !tokens ? null : (\n                        <th scope=\"col\">Edit</th>   )}\n                    </tr>\n                    </thead>\n                    {boards.map(b => (\n                        <tbody key={b.id}>\n                        <tr>\n                            <td>\n                                <small className=\"text-muted d-block\">\n                          <Link className=\"link-success\" to={{pathname:`/board/${b.id}/`, froDashboard:false }}>\n                              <p className=\"h5\">{b.name}</p></Link>\n                            <p>{b.description}</p>\n                                </small>\n                            </td>\n                            <td className=\"align-middle\">\n                                {b.topics_count}\n                            </td>\n                            <td className=\"align-middle\">\n                                {b.posts_count}\n                            </td>\n\n                            <td className=\"align-middle\">\n\n                                <small>\n                                    {b.last_post.message} <br/>\n                                    <a href=\"\">\n                                        By {b.last_post.author}\n                                    </a>\n                                </small>\n                            </td>\n    { !tokens ? null : (\n                            <td>\n      <Button variant=\"primary\" onClick={()=>handleShow(b)} >\n        Edit\n      </Button> &nbsp; &nbsp;\n       <Link  type=\"button\" onClick={() => deleteboard(`${b.id}`)}  className=\"btn btn-danger\">Delete</Link>\n                            </td>     )}\n\n                        </tr>\n                        </tbody>\n                    ))}\n                </table>\n                {show && <MyModal open={show} boarD={currentBoard} handleClose={handleClose}/>}\n            </div>\n        );\n}\n\n\nexport default Table;\n","/home/user/Desktop/react_board/boards/boards-ui/src/components/board_detail/BoardDetail.js",["127","128"],"import React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport {Link, withRouter} from \"react-router-dom\";\nimport {Button} from \"react-bootstrap\";\nimport InfoModal from \"../InfoModal/infomodal\";\nimport NewTopic from \"../NewTopic/newtopic\";\n\nfunction BoardDetail({ match }) {\n\n    const [board, Setboard] = useState({})\n    const [topics, SetTopic] = useState([])\n    const id = match.params.id\n    const tokens = localStorage.tokens;\n\n    const [showTopic, setShowTopic] = useState(false);\n    const handleCloseTopic = () => setShowTopic(false);\n    const handleShowTopic =() =>{\n      setShowTopic(true);}\n\n\n// console.log(match)\n    useEffect(() => {\n\n        axios({\n            method: \"GET\",\n            headers: {\n                'Authorization': `Token ${tokens}`,\n                'Accept' : 'application/json',\n                'Content-Type': 'application/json'\n                },\n            url: `http://127.0.0.1:8000/api/board/${id}/`\n        }).then(response => {\n            Setboard(response.data)\n            SetTopic(response.data.topics)\n        })\n    }, [id, showTopic])\n\n    return(\n\n<div className=\"App mt-5\">\n {\n                          !tokens ? null : ( <>\n              <Button variant=\"success \" className=\"d-flex m-1 ml-2\" onClick={()=>handleShowTopic()} >New Topic</Button>\n  {showTopic && <NewTopic openTopic={showTopic}  handleCloseTopic={handleCloseTopic} />}\n  </>)\n                        }\n {topics.length ?\n\n     <table className=\"table table-bordered m-1\">\n\n        <thead>\n        <tr>\n      <th scope=\"col\">Topic</th>\n      <th scope=\"col\">Starter</th>\n      <th scope=\"col\">Replies</th>\n      <th scope=\"col\">Views</th>\n      <th scope=\"col\">Last Update</th>\n        </tr>\n        </thead>\n       {topics.map(t => (\n        <tbody className=\"infinite-item\" key={t.id}>\n        <tr>\n          <td>\n              <small className=\"text-muted d-block\">\n {\n   !tokens ? null : (\n<Link className=\"link-success\" to={{pathname:`/board/${board.id}/topic/${t.id}/` }}>\n    <p className=\"h5\">{t.subject}</p>\n    </Link>\n   )}\n              </small>\n          </td>\n          <td className=\"align-middle\">\n            {t.starter}\n          </td>\n          <td className=\"align-middle\">\n            {t.replies}\n          </td>\n          <td className=\"align-middle\">\n               {t.views}\n              </td>\n          <td className=\"align-middle\">\n           {t.last_updated}\n          </td>\n        </tr>\n        </tbody>\n           ))}\n      </table>\n     : <p className=\"text-center fs-3\">Content doesnt exist, create new topic</p>\n }\n</div>\n\n    )\n}\n\nexport default withRouter(BoardDetail);","/home/user/Desktop/react_board/boards/boards-ui/src/components/navbar/navbar.js",["129","130","131","132"],"import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Link} from 'react-router-dom';\n// // import Dropdown from 'react-overlays/Dropdown'\n// import DropdownButton from 'react-bootstrap/DropdownButton'\n// import Dropdown from 'react-bootstrap/Dropdown'\nimport NavDropdown from 'react-bootstrap/NavDropdown'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from \"react-bootstrap/Navbar\";\nimport {withRouter} from \"react-router-dom\";\n\nimport axios from 'axios';\n                // <Link className=\"navbar-brand\" to={{pathname:`/api/account/`, froDashboard:false }}>Django Boards</Link>\n\nfunction MyNavbar(props) {\n    const [user, Setuser] = useState({})\n    const tokens = localStorage.tokens;\n    const logout = ()=>{ axios({\n            method: \"post\",\n            headers: {\n                'Authorization': `Token ${tokens}`,\n                'Accept' : 'application/json',\n                'Content-Type': 'application/json'\n                },\n            url: `http://127.0.0.1:8000/auth/token/logout/`\n        }).then((response)=> {\n            // console.log(response)\n            if (response.status === 204) {\n            window.localStorage.removeItem(\"tokens\");\n            window.location.reload();\n             //    props.history.push(\"/auth/token/login/\")\n            }\n    } )}\n\n\n  return (\n\n    <div className=\"App\">\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <div className=\"container-fluid\">\n                <Link className=\"navbar-brand\" to={{pathname:`/`, froDashboard:false }}>Django Boards</Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\n                        data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"> </span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav ms-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n  <a href=\"http://127.0.0.1:8000/swagger/\" className=\"nav-link active text-info\" target=\"_blank\">Documents</a>\n                        </li>\n                        {\n                          tokens ? null : ( <>\n                        <li className=\"nav-item\">\n\n         <Link  className=\"nav-link active\" aria-current=\"page\" to={{pathname:`/auth/token/login/`, froDashboard:false }}>Login</Link>\n\n                        </li>\n                        <li className=\"nav-item\">\n         <Link  className=\"nav-link active\" aria-current=\"page\" to={{pathname:`/auth/users/`, froDashboard:false }}>Register</Link>\n                        </li>\n                            </>)\n                        }\n                        <li className=\"nav-item dropdown\">\n                            {\n                                !tokens ? null : ( <><Navbar.Toggle aria-controls=\"navbar-dark-example\" />\n    <Navbar.Collapse id=\"navbar-dark-example\">\n      <Nav>\n        <NavDropdown\n          id=\"nav-dropdown-dark-example\"\n          title=\"Profile\"\n          menuVariant=\"dark\"\n        >\n            <Link to={{pathname:`/account/`, froDashboard:false }} >  <NavDropdown.Item href=\"/account/\">My profile</NavDropdown.Item></Link>\n          <NavDropdown.Item href=\"#action/3.2\">Change password</NavDropdown.Item>\n          {/*<NavDropdown.Item href=\"#action/3.3\">Logout</NavDropdown.Item>*/}\n          <NavDropdown.Divider />\n          <NavDropdown.Item onClick={logout}>Logout</NavDropdown.Item>\n        </NavDropdown>\n      </Nav>\n    </Navbar.Collapse></>)\n                            }\n\n                        </li>\n\n                    </ul>\n\n                </div>\n            </div>\n        </nav>\n    </div>\n  )\n}\n\nexport default withRouter(MyNavbar);","/home/user/Desktop/react_board/boards/boards-ui/src/components/topic_detail/Topic.js",["133","134","135","136","137"],"import React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport {Link} from \"react-router-dom\";\nimport Carousel from 'react-bootstrap/Carousel'\nimport {Button} from \"react-bootstrap\";\nimport NewTopic from \"../NewTopic/newtopic\";\nimport NewPost from \"../NewPost/newpost\";\n\nfunction TopicDetail({ match }) {\n    const tokens = localStorage.tokens;\n    const [topic, SetTopic] = useState({})\n    const [posts, SetPosts] = useState([])\n    const [images, SetImage] = useState([])\n    const id = match.params.id\n    const pk = match.params.pk\n    const [showPost, setShowPost] = useState(false);\n    const handleClosePost = () => setShowPost(false);\n    const handleShowPost =() =>{\n      setShowPost(true);}\n\n\n    useEffect(() => {\n        axios({\n            method: \"GET\",\n            url: `http://127.0.0.1:8000/api/board/${id}/topic/${pk}/`\n        }).then(response => {\n            SetTopic(response.data)\n            SetPosts(response.data.posts)\n            SetImage(response.data.photos)\n        })\n    }, [id,showPost])\n    return(\n\n\n<div className=\"App bordered mt-3 \">\n\n    <div className=\"d-flex justify-content-center\">\n        <div className=\"row\">\n            <div className=\"col-sm\">\n <Carousel>\n   {images.map(i => (\n  <Carousel.Item>\n    <img\n\n      className=\"d-block\"\n      src={i.file}\n      alt=\"First slide\"\n    />\n  </Carousel.Item>\n\n       ))}\n</Carousel>\n</div>\n  </div>\n\n</div>\n    <div className=\"container-fluid\">\n\n    <table className=\"table table-bordered m-2\">\n\n               <thead>  {showPost && <NewPost openPost={showPost}   handleClosePost={handleClosePost} />}\n                             {\n     !posts.length  ? <strong>No contents create new <Button variant=\"btn btn-link\" onClick={()=>handleShowPost()}>post</Button>\n     </strong> : ( <>\n    <Button placement=\"right\" variant=\"btn btn-primary mt-2\"  onClick={()=>handleShowPost()} >New Post</Button>\n\n               <tr >\n                   <th scope=\"col\">User</th>\n                   <th scope=\"col\" >Post</th>\n                   <th scope=\"col\">Time</th>\n               </tr>  </>)\n                        }\n               </thead>\n               {posts.map(p => (\n               <tbody key=\"{p.id}\">\n               <tr>\n                   <th >{p.created_by}</th>\n                   <td >{p.message}</td>\n                   <td>{p.created_at}</td>\n               </tr>\n               </tbody>\n                   ))}\n\n           </table>\n</div>\n</div>\n    )\n}\nexport default TopicDetail;","/home/user/Desktop/react_board/boards/boards-ui/src/components/footer/footer.js",["138","139","140","141","142"],"import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Link , Redirect} from 'react-router-dom';\n\nimport axios from 'axios';\n\nfunction Footer() {\n\n  return (\n\n        <div className=\"footer\" style={{marginTop:'265px'}}>\n            <footer className=\"text-center text-lg-start bg-light text-muted mt-auto\" >\n                <section className=\"\" >\n                    <div className=\"container text-center text-md-start mt-5\">\n\n                        <div className=\"row mt-4 pt-4\">\n\n                            <div className=\"col-md-3 col-lg-4 col-xl-3 mx-auto mb-4\">\n\n                                <h6 className=\"text-uppercase fw-bold mb-4\">\n                                    <i className=\"fas fa-gem me-3\"> </i>Company name\n                                </h6>\n                                <p>\n                                    Here you can use rows and columns to organize your footer content. Lorem ipsum\n                                    dolor sit amet, consectetur adipisicing elit.\n                                </p>\n                            </div>\n\n                            <div className=\"col-md-3 col-lg-2 col-xl-2 mx-auto mb-4\">\n                                <h6 className=\"text-uppercase fw-bold mb-4\">\n                                    Privacy policy\n                                </h6>\n                                <p>\n\n         <Link className=\"text-reset\" to={{pathname:`/pages/1/` }}>Privacy</Link>  /\n         <Link className=\"text-reset\" to={{pathname:`/pages/2/` }}>Terms</Link> /\n         <Link className=\"text-reset\" to={{pathname:`/customer-list/` }}>customers</Link>\n                                </p>\n\n                            </div>\n\n                            <div className=\"col-md-4 col-lg-3 col-xl-3 mx-auto mb-md-0 mb-4\">\n                                <h6 className=\"text-uppercase fw-bold mb-4\">\n                                    Contact\n                                </h6>\n                                <p><i className=\"fas fa-home me-3\"> </i> New York, NY 10012, US</p>\n                                <p>\n                                    <i className=\"fas fa-envelope me-3\"> </i>\n                                    info@example.com\n                                </p>\n                                <p><i className=\"fas fa-phone me-3\"> </i> + 01 234 567 88</p>\n                                <p><i className=\"fas fa-print me-3\"> </i> + 01 234 567 89</p>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n\n                <div className=\"text-center p-4\">\n                    © 2021 Copyright:\n                    <a className=\"text-reset fw-bold\">MDBootstrap.com</a>\n                </div>\n            </footer>\n        </div>\n\n\n  )\n}\n\nexport default Footer;","/home/user/Desktop/react_board/boards/boards-ui/src/components/customers/CustomersList.js",[],"/home/user/Desktop/react_board/boards/boards-ui/src/components/customers/CustomerCreateUpdate.js",[],"/home/user/Desktop/react_board/boards/boards-ui/src/components/customers/CustomersService.js",["143"],"import axios from 'axios';\nconst API_URL = 'http://127.0.0.1:8000';\n\nexport default class CustomersService{\n\n    constructor(){}\n\n\n    getCustomers() {\n        const url = `${API_URL}/api/customers/`;\n        return axios.get(url).then(response => response.data);\n    }\n    getCustomersByURL(link){\n        const url = `${API_URL}${link}`;\n        return axios.get(url).then(response => response.data);\n    }\n    getCustomer(pk) {\n        const url = `${API_URL}/api/customers/${pk}`;\n        return axios.get(url).then(response => response.data);\n    }\n    deleteCustomer(customer){\n        const url = `${API_URL}/api/customers/${customer.pk}`;\n        return axios.delete(url);\n    }\n    createCustomer(customer){\n        const url = `${API_URL}/api/customers/`;\n        return axios.post(url,customer);\n    }\n    updateCustomer(customer){\n        const url = `${API_URL}/api/customers/${customer.pk}`;\n        return axios.put(url,customer);\n    }\n}","/home/user/Desktop/react_board/boards/boards-ui/src/components/InfoPages/infopages.js",["144"],"import React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport {Link} from \"react-router-dom\";\n\nfunction InfoPageDetail({ match }) {\n\n    const [infopage, Setinfopage] = useState({})\n    const id = match.params.id\n\n    useEffect(() => {\n        axios({\n            method: \"GET\",\n            url: `http://127.0.0.1:8000/api/pages/${id}/`\n        }).then(response => {\n            Setinfopage(response.data)\n        })\n    }, [id])\n\n     return(\n<div className=\"App m-5\">\n\n    <div className=\"card\">\n        <div className=\"card-body\">\n            <h5 className=\"card-title\">{infopage.title}</h5>\n            <p className=\"card-text\">{infopage.content}</p>\n        </div>\n    </div>\n</div>\n    )\n}\n\nexport default InfoPageDetail;","/home/user/Desktop/react_board/boards/boards-ui/src/components/auth/registerForm.js",["145"],"import React from 'react';\nimport { withFormik, Form, Field, Formik } from 'formik';\nimport {withRouter} from \"react-router-dom\";\nimport * as Yup from 'yup';\n\nconst RegisterPage = (props) => {\n  const registerPageStyle = {\n    margin: \"32px auto 37px\",\n    maxWidth: \"530px\",\n    background: \"#fff\",\n    padding: \"30px\",\n    borderRadius: \"10px\",\n    boxShadow: \"0px 0px 10px 10px rgba(0,0,0,0.15)\"\n  };\n\n  const  validationSchema = Yup.object().shape({\n    password: Yup.string().required('Password is required'),\n    email: Yup.string().required('Email is required')\n  })\n\n\n  const handleSubmit = (values) => {\n    const REST_API_URL = \"http://127.0.0.1:8000/auth/users/\";\n    fetch(REST_API_URL, {\n      method: 'post',\n      body: JSON.stringify(values),\n      headers: {\n                'Content-Type': 'application/json',\n                }\n    }).then(response=> {\n      if (response.ok) {\n        return response.json();\n      } else {\n        // HANDLE ERROR\n        throw new Error('Something went wrong');\n      }\n    }).then(data => {\n      // HANDLE RESPONSE DATA\n      console.log(data);\n      props.history.push(\"/auth/token/login/\")\n    }).catch((error) => {\n      // HANDLE ERROR\n      console.log(error);\n    });\n  }\n  // const { touched, errors } = props;\n  return(\n    <React.Fragment>\n      <div className=\"container\">\n        <div className=\"login-wrapper\" style={registerPageStyle}>\n          <h2>Register Page</h2>\n          <Formik\n       initialValues={{ username: \"\",email: \"\", password: \"\" }}\n       onSubmit={handleSubmit}\n       validationSchema={validationSchema}\n       enableReinitialize\n     >\n       {props => (\n          <Form className=\"form-container\">\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <Field type=\"text\" name=\"username\" id={\"username\"} className={\"form-control \"} placeholder=\"username\" />\n              { props.touched.username && props.errors.username && <span className=\"help-block text-danger\">{props.errors.username}</span> }\n            </div>\n              <div className=\"form-group\">\n              <label htmlFor=\"email\">Email</label>\n              <Field type=\"text\" name=\"email\" id={\"email\"} className={\"form-control\"} placeholder=\"Email\" />\n              { props.touched.email && props.errors.email && <span className=\"help-block text-danger\">{props.errors.email}</span> }\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <Field type=\"password\" name=\"password\" id={\"password\"} className={\"form-control \"} placeholder=\"Password\" />\n              { props.touched.password && props.errors.password && <span className=\"help-block text-danger\">{props.errors.password}</span> }\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary m-2\">Register</button>\n          </Form>)}\n             </Formik>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\n\nexport default withRouter(RegisterPage);","/home/user/Desktop/react_board/boards/boards-ui/src/components/auth/signUpform.js",["146"],"import React from 'react';\nimport { withFormik, Form, Field, Formik } from 'formik';\nimport {withRouter} from \"react-router-dom\";\nimport * as Yup from 'yup';\n\nconst LoginPage = (props) => {\n  const loginPageStyle = {\n    margin: \"32px auto 37px\",\n    maxWidth: \"530px\",\n    background: \"#fff\",\n    padding: \"30px\",\n    borderRadius: \"10px\",\n    boxShadow: \"0px 0px 10px 10px rgba(0,0,0,0.15)\"\n  };\n\n  const  validationSchema = Yup.object().shape({\n    password: Yup.string().required('Password is required')\n  })\n\n  const handleSubmit = (values) => {\n    const REST_API_URL = \"http://127.0.0.1:8000/auth/token/login/\";\n    fetch(REST_API_URL, {\n      method: 'post',\n      body: JSON.stringify(values),\n      headers: {\n                'Content-Type': 'application/json',\n                }\n    }).then(response=> {\n      if (response.ok) {\n        return response.json();\n      } else {\n        // HANDLE ERROR\n        throw new Error('Something went wrong');\n      }\n    }).then(data => {\n      // HANDLE RESPONSE DATA\n      // console.log(data);\n      window.localStorage.setItem('tokens', data.auth_token);\n      props.history.push(\"/\")\n    }).catch((error) => {\n      // HANDLE ERROR\n      console.log(error);\n    });\n  }\n  // const { touched, errors } = props;\n  return(\n    <React.Fragment>\n      <div className=\"container\">\n        <div className=\"login-wrapper\" style={loginPageStyle}>\n          <h2>Login Page</h2>\n          <Formik\n       initialValues={{ username: '', password: \"\" }}\n       onSubmit={handleSubmit}\n       validationSchema={validationSchema}\n     >\n       {props => (\n          <Form className=\"form-container\">\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <Field type=\"text\" name=\"username\" id={\"username\"} className={\"form-control \"} placeholder=\"username\" />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <Field type=\"password\" name=\"password\" id={\"password\"} className={\"form-control \"} placeholder=\"Password\" />\n              { props.touched.password && props.errors.password && <span className=\"help-block text-danger\">{props.errors.password}</span> }\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary m-2\">Login</button>\n          </Form>)}\n             </Formik>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\n\n\nexport default withRouter(LoginPage);","/home/user/Desktop/react_board/boards/boards-ui/src/components/account/my_account.js",["147","148","149"],"import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Link} from 'react-router-dom';\n\n\nimport axios from 'axios';\n\nfunction Profile() {\n    const [user, Setuser] = useState({})\n    const tokens = localStorage.tokens;\n    useEffect(() => {\n\n        axios({\n            method: \"GET\",\n            headers: {\n                'Authorization': `Token ${tokens}`,\n                'Accept' : 'application/json',\n                'Content-Type': 'application/json'\n                },\n            url: `http://127.0.0.1:8000/api/account/`\n        }).then(response => {\n            console.log(response.data)\n            Setuser(response.data)\n        })\n    }, [])\n\n\n  return (\n<div className=\"container mt-5\">\n      <div className=\"page-content page-container ml-4 \" id=\"page-content\" key={user.id}>\n          <div className=\"padding mb-5\">\n              <div className=\"row container d-flex justify-content-center mb-5\">\n                  <div className=\"col-xl-6 col-md-12\">\n                      <div className=\"card user-card-full\">\n                          <div className=\"row m-l-0 m-r-0\">\n                              <div className=\"col-sm-4 bg-c-lite-green user-profile\">\n                                  <div className=\"card-block text-center text-white\">\n                                      <div className=\"m-b-5\">\n                                          <img\n                                          src=\"https://img.icons8.com/bubbles/100/000000/user.png\"\n                                          className=\"img-radius\" alt=\"User-Profile-Image\" />\n                                      </div>\n                                      <h6 className=\"f-w-600\"> </h6>\n                                      <p>Web </p> <i\n                                      className=\" mdi mdi-square-edit-outline feather icon-edit m-t-10 f-16\"> </i>\n                                  </div>\n                              </div>\n                              <div className=\"col-sm-8\">\n                                  <div className=\"card-block\">\n                                      <h6 className=\"m-b-20 p-b-5 b-b-default f-w-600 mb-5\">Information</h6>\n                                      <div className=\"row\">\n                                          <div className=\"col-sm-6\">\n                                              <p className=\"m-b-10 f-w-600\">Username</p>\n                                              <h6 className=\"text-muted f-w-400\">{user.username} </h6>\n                                          </div>\n                                          <div className=\"col-sm-6\">\n                                              <p className=\"m-b-10 f-w-600\">Email</p>\n                                              <h6 className=\"text-muted f-w-400\">{user.email} </h6>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Profile;","/home/user/Desktop/react_board/boards/boards-ui/src/components/Modal/modal.js",["150","151"],"import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Modal, Button } from 'react-bootstrap'\nimport { withFormik, Form, Field, Formik } from 'formik';\nimport * as Yup from \"yup\";\n\n\nfunction MyModal({open,handleClose,boarD,props}) {\n\n    const tokens = localStorage.tokens;\n    const  validationSchema = Yup.object().shape({\n    name: Yup.string().required('name is wrong'),\n    description: Yup.string().required('Description is wrong')\n  })\n\n\n  const handleSubmit = (values) => {\n    const REST_API_URL = `http://127.0.0.1:8000/api/board/${boarD.id}/`;\n    fetch(REST_API_URL, {\n      method: 'put',\n      body: JSON.stringify(values),\n      headers: {\n          'Authorization': `Token ${tokens}`,\n           'Content-Type': 'application/json',\n                }\n    }).then(response=> {\n      if (response.ok) {\n        return response.json();\n      } else {\n        // HANDLE ERROR\n        throw new Error('Something went wrong');\n      }\n    }).then(data => {\n      // HANDLE RESPONSE DATA\n      window.location.reload();\n\n    }).catch((error) => {\n      // HANDLE ERROR\n      console.log(error);\n    });\n  }\n  return (\n    <div>\n      <Modal show={open} onHide={handleClose}>\n\n        <Modal.Header closeButton>\n          <Modal.Title> Edit '{boarD.name}'</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n<React.Fragment>\n\n          <Formik\n       initialValues={{ name: boarD.name, description: boarD.description }}\n       onSubmit={handleSubmit}\n       validationSchema={validationSchema}\n       enableReinitialize\n     >\n       {props => (\n          <Form className=\"form-container\">\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">name</label>\n              <Field type=\"text\" name=\"name\" id={\"name\"} className={\"form-control \"} placeholder=\"Name\" />\n              { props.touched.name && props.errors.name && <span className=\"help-block text-danger\">{props.errors.name}</span> }\n            </div>\n              <div className=\"form-group\">\n              <label htmlFor=\"description\">Description</label>\n              <Field type=\"text\" name=\"description\" id={\"description\"} className={\"form-control\"} placeholder=\"Description\" />\n              { props.touched.description && props.errors.description && <span className=\"help-block text-danger\">{props.errors.description}</span> }\n            </div>\n        <Modal.Footer>\n\n          <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\n                  <button type=\"submit\" className=\"btn btn-primary mb-2\">submit </button>\n\n        </Modal.Footer>\n          </Form>)}\n             </Formik>\n\n    </React.Fragment>\n\n        </Modal.Body>\n\n\n      </Modal>\n\n    </div>\n  );\n}\n\nexport default MyModal;","/home/user/Desktop/react_board/boards/boards-ui/src/components/BoardForm/boardform.js",["152","153"],"import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Modal, Button } from 'react-bootstrap'\nimport { withFormik, Form, Field, Formik } from 'formik';\nimport * as Yup from \"yup\";\n\nfunction BoardForm({open,handleCloseBoard,props}){\n    const tokens = localStorage.tokens;\n\n  const  validationSchema = Yup.object().shape({\n    name: Yup.string().required('name is wrong'),\n    description: Yup.string().required('Description is wrong')\n  })\n\n\n  const boardSubmit = (values) => {\n    const REST_API_URL = `http://127.0.0.1:8000/api/board/`;\n    fetch(REST_API_URL, {\n      method: 'post',\n      body: JSON.stringify(values),\n      headers: {\n          'Authorization': `Token ${tokens}`,\n           'Content-Type': 'application/json',\n                }\n    }).then(response=> {\n      if (response.ok) {\n        return response.json();\n      } else {\n        // HANDLE ERROR\n        throw new Error('Something went wrong');\n      }\n    }).then(data => {\n      // HANDLE RESPONSE DATA\n      window.location.reload();\n      // props.history.push(\"/\")\n\n    }).catch((error) => {\n      // HANDLE ERROR\n      console.log(error);\n    });\n  }\n  return (\n    <div>\n      <Modal show={open} onHide={handleCloseBoard}>\n\n        <Modal.Header closeButton>\n          <Modal.Title> New Board</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n<React.Fragment>\n\n          <Formik\n       initialValues={{ Name: '', Description: \"\" }}\n       onSubmit={boardSubmit}\n       validationSchema={validationSchema}\n     >\n       {props => (\n          <Form className=\"form-container\">\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">name</label>\n              <Field type=\"text\" name=\"name\" id={\"name\"} className={\"form-control \"} placeholder=\"Name\" />\n              { props.touched.name && props.errors.name && <span className=\"help-block text-danger\">{props.errors.name}</span> }\n            </div>\n              <div className=\"form-group\">\n              <label htmlFor=\"description\">Description</label>\n              <Field type=\"text\" name=\"description\" id={\"description\"} className={\"form-control\"} placeholder=\"Description\" />\n              { props.touched.description && props.errors.description && <span className=\"help-block text-danger\">{props.errors.description}</span> }\n            </div>\n        <Modal.Footer>\n\n          <Button variant=\"secondary\" onClick={handleCloseBoard}>Close</Button>\n                  <button type=\"submit\" className=\"btn btn-primary mb-2\">Create</button>\n\n        </Modal.Footer>\n          </Form>)}\n             </Formik>\n\n    </React.Fragment>\n\n        </Modal.Body>\n\n\n\n      </Modal>\n\n    </div>\n  );\n}\n\nexport default BoardForm;","/home/user/Desktop/react_board/boards/boards-ui/src/components/InfoModal/infomodal.js",["154","155"],"import {Button, Modal} from \"react-bootstrap\";\nimport React from \"react\";\nimport BoardForm from \"../BoardForm/boardform\";\n\nlet crud = {\n    \"-\": \"Delete\",\n    \"+\": \"Create\",\n    \"~\": \"Update\"\n}\n\nfunction InfoModal({openInfo,handleCloseInfo,myhistory,props}) {\nconst tokens = localStorage.tokens;\n\n// console.log(myhistory)\n\n  return (\n    <div>\n      <Modal show={openInfo} onHide={handleCloseInfo}>\n        <Modal.Header closeButton>\n          <Modal.Title> Last changes </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <table className=\"table\">\n                <thead className=\"thead-dark\">\n                <tr>\n                    <th scope=\"col\">Object</th>\n                    <th scope=\"col\">Changes</th>\n                    <th scope=\"col\">Time</th>\n                </tr>\n                </thead>\n\n                {\n                    myhistory.map(h => (\n                <tbody key={h.id}>\n                <tr>\n                    <td> {h.name}</td>\n                    <td> {crud[h.history_type]}</td>\n                    <td> {h.history_date}</td>\n                </tr>\n                </tbody>\n                      ))}\n            </table>\n<React.Fragment>\n\n\n        <Modal.Footer>\n\n          <Button variant=\"secondary\" onClick={handleCloseInfo}>Close</Button>\n\n\n        </Modal.Footer>\n\n\n    </React.Fragment>\n        </Modal.Body>\n\n\n\n      </Modal>\n\n    </div>\n  );\n}\n\nexport default InfoModal;","/home/user/Desktop/react_board/boards/boards-ui/src/components/NewTopic/newtopic.js",["156","157","158"],"import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Modal, Button } from 'react-bootstrap'\nimport { withFormik, Form, Field, Formik } from 'formik';\nimport * as Yup from \"yup\";\nimport {withRouter} from \"react-router-dom\";\nimport FormData from 'form-data';\nconst axios = require('axios');\n\nfunction NewTopic(props) {\n    const{openTopic,handleCloseTopic,history,match} = props;\n    const id = match.params.id\n    const tokens = localStorage.tokens;\n    const  validationSchema = Yup.object().shape({\n    subject: Yup.string().required('subject is wrong'),\n  }, [id])\n\n\n  const handleSubmit = (values) => {\n    let data = new FormData();\n    for(const file of values.file){\n        data.append(\"image\", file);\n    }\n     // data.append('file[]', values.file, values.file.name,);\n     data.append('subject', values.subject);\n    // console.log(\"data\", data)\n    console.log(\"values\", values.file.name)\n    const REST_API_URL = `http://127.0.0.1:8000/api/board/${id}/new/`;\n    axios.post(REST_API_URL, data, {\n  headers: {\n    'accept': 'application/json',\n    'Accept-Language': 'en-US,en;q=0.8',\n    'Content-Type': `multipart/form-data`,\n    'Authorization': `Token ${tokens}`,\n\n  }\n})\n  .then((response) => {\n      if (response.status===201) {\n          alert(\"Success\");\n            handleCloseTopic()\n      }\n      else {\n          alert(\"error\");\n          handleCloseTopic()\n          // window.location.reload();\n        throw new Error('Something went wrong');\n      }\n  });\n  }\n  return (\n    <div>\n      <Modal show={openTopic} onHide={handleCloseTopic}>\n\n        <Modal.Header closeButton>\n          <Modal.Title> New Topic </Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n<React.Fragment>\n\n          <Formik\n       initialValues={{ subject: \"\" }}\n       onSubmit={handleSubmit}\n       validationSchema={validationSchema}\n     >\n       {props => (\n          <Form className=\"form-container\">\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">subject</label>\n              <Field type=\"text\" name=\"subject\" id={\"subject\"} className={\"form-control \"} placeholder=\"subject\" />\n              { props.touched.subject && props.errors.subject && <span className=\"help-block text-danger\">{props.errors.subject}</span> }\n\n               <input className=\"m-2\"\n              multiple={true}\n              type=\"file\"\n              name=\"file\"\n              onChange={(event) =>{\n                props.setFieldValue(\"file\", event.target.files);\n              }}\n            />\n\n            </div>\n\n        <Modal.Footer>\n\n          <Button variant=\"secondary\" onClick={handleCloseTopic}>Close</Button>\n                  <button type=\"submit\" className=\"btn btn-primary mb-2\">Create </button>\n\n        </Modal.Footer>\n          </Form>)}\n             </Formik>\n\n    </React.Fragment>\n\n        </Modal.Body>\n\n\n      </Modal>\n\n    </div>\n  );\n}\n\nexport default withRouter(NewTopic);","/home/user/Desktop/react_board/boards/boards-ui/src/components/NewPost/newpost.js",["159","160","161"],"import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Modal, Button } from 'react-bootstrap'\nimport { withFormik, Form, Field, Formik } from 'formik';\nimport * as Yup from \"yup\";\nimport {withRouter} from \"react-router-dom\";\n\n\nfunction NewPost(props) {\n    const{openPost,handleClosePost,history,match} = props;\n    const id = match.params.id\n    const pk = match.params.pk\n    const tokens = localStorage.tokens;\n\n    const  validationSchema = Yup.object().shape({\n    message: Yup.string().required('message is wrong'),\n  }, [id,pk])\n\n\n  const handleSubmit = (values) => {\n\n    const REST_API_URL = `http://127.0.0.1:8000/api/board/${id}/topic/${pk}/`;\n    fetch(REST_API_URL, {\n      method: 'post',\n      body: JSON.stringify(values),\n      headers: {\n            'Authorization': `Token ${tokens}`,\n            'Content-Type': 'application/json',\n                }\n    }).then(response=> {\n      if (response.status===201) {\n          // props.history.push('/')\n            handleClosePost()\n      }\n      else {\n        // HANDLE ERROR\n          handleClosePost()\n          window.location.reload();\n        throw new Error('Something went wrong');\n      }\n    }).then(data => {\n      // HANDLE RESPONSE DATA\n\n    }).catch((error) => {\n      // HANDLE ERROR\n      console.log(error);\n    });\n  }\n  return (\n    <div>\n      <Modal show={openPost} onHide={handleClosePost}>\n\n        <Modal.Header closeButton>\n          <Modal.Title> New Post </Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n<React.Fragment>\n\n          <Formik\n       initialValues={{ message: \"\" }}\n       onSubmit={handleSubmit}\n       validationSchema={validationSchema}\n     >\n       {props => (\n          <Form className=\"form-container\">\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">message</label>\n              <Field type=\"text\" name=\"message\" id={\"message\"} className={\"form-control \"} placeholder=\"message\" />\n              { props.touched.message && props.errors.message && <span className=\"help-block text-danger\">{props.errors.message}</span> }\n            </div>\n\n        <Modal.Footer>\n\n          <Button variant=\"secondary\" onClick={handleClosePost}>Close</Button>\n                  <button type=\"submit\" className=\"btn btn-primary mb-2\">Create </button>\n\n        </Modal.Footer>\n          </Form>)}\n             </Formik>\n\n    </React.Fragment>\n\n        </Modal.Body>\n\n\n      </Modal>\n\n    </div>\n  );\n}\n\nexport default withRouter(NewPost);","/home/user/Desktop/react_board/boards/boards-ui/src/components/account/my_account2.js",["162","163","164","165","166","167","168","169","170"],"/home/user/Desktop/react_board/boards/boards-ui/src/components/account/crop.js",["171"],"const getImageFromUrl = url =>\n  new Promise((resolve, reject) => {\n    const image = new Image();\n    image.addEventListener(\"load\", () => resolve(image));\n    image.addEventListener(\"error\", reject);\n    image.src = url;\n  });\n\nconst getBlobFromCanvas = (canvas, file) =>\n  new Promise((resolve, reject) => {\n    canvas.toBlob(blob => {\n      if (blob) {\n        blob.name = file.name;\n        blob.lastModified = file.lastModified;\n        resolve(blob);\n      } else {\n        reject(new Error(\"Canvas is empty\"));\n      }\n    }, file.type); //\"image/jpeg\");\n  });\n\nexport default async (imageUrl, file, crop) => {\n  const image = await getImageFromUrl(imageUrl),\n    canvas = document.createElement(\"canvas\"),\n    scaleX = image.naturalWidth / image.width,\n    scaleY = image.naturalHeight / image.height,\n    ctx = canvas.getContext(\"2d\");\n\n  canvas.width = crop.width;\n  canvas.height = crop.height;\n\n  ctx.drawImage(\n    image,\n    crop.x * scaleX,\n    crop.y * scaleY,\n    crop.width * scaleX,\n    crop.height * scaleY,\n    0,\n    0,\n    crop.width,\n    crop.height\n  );\n\n  return await getBlobFromCanvas(canvas, file);\n};\n","/home/user/Desktop/react_board/boards/boards-ui/src/components/account/modalcrop.js",["172","173","174","175","176","177"],"import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Modal, Button } from 'react-bootstrap'\nimport { withFormik, Form, Field, Formik } from 'formik';\nimport * as Yup from \"yup\";\nimport {withRouter} from \"react-router-dom\";\nimport FormData from 'form-data';\n\nconst axios = require('axios');\n\nfunction CropModal(props) {\n    const{openTopic,handleCloseTopic,history,match} = props;\n    const id = match.params.id\n    const tokens = localStorage.tokens;\n\n\n  const handleSubmit = (values) => {\n    let data = new FormData();\n    data.append(\"image\", values.file);\n\n     // data.append('file[]', values.file, values.file.name,);\n    console.log(\"data\", data)\n    const REST_API_URL = `http://127.0.0.1:8000/api/account/`;\n\n    axios.post(REST_API_URL, data, {\n  headers: {\n    'accept': 'application/json',\n    'Accept-Language': 'en-US,en;q=0.8',\n    'Content-Type': `multipart/form-data`,\n    'Authorization': `Token ${tokens}`,\n  }\n})\n  .then((response) => {\n      if (response.status===201) {\n          alert(\"Success\");\n            handleCloseTopic()\n      }\n      else {\n          alert(\"error\");\n          handleCloseTopic()\n          // window.location.reload();\n        throw new Error('Something went wrong');\n      }\n  });\n  }\n  return (\n    <div>\n      <Modal show={openTopic} onHide={handleCloseTopic}>\n\n        <Modal.Header closeButton>\n          <Modal.Title> New Topic </Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n<React.Fragment>\n\n          <Formik\n       initialValues={{ subject: \"\" }}\n       onSubmit={handleSubmit}\n     >\n       {props => (\n          <Form className=\"form-container\">\n            <div className=\"form-group\">\n               <input className=\"m-2\"\n              multiple={true}\n              type=\"file\"\n              name=\"file\"\n              onChange={(event) =>{\n                props.setFieldValue(\"file\", event.target.files[0]);\n\n              }}\n            />\n            </div>\n\n        <Modal.Footer>\n\n          <Button variant=\"secondary\" onClick={handleCloseTopic}>Close</Button>\n                  <button type=\"submit\" className=\"btn btn-primary mb-2\">Update </button>\n\n        </Modal.Footer>\n          </Form>)}\n             </Formik>\n\n    </React.Fragment>\n\n        </Modal.Body>\n\n\n      </Modal>\n\n    </div>\n  );\n}\n\nexport default withRouter(CropModal);","/home/user/Desktop/react_board/boards/boards-ui/src/components/account/Dialog.js",["178","179","180"],{"ruleId":"181","severity":1,"message":"182","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":25},{"ruleId":"181","severity":1,"message":"185","line":1,"column":27,"nodeType":"183","messageId":"184","endLine":1,"endColumn":36},{"ruleId":"181","severity":1,"message":"186","line":5,"column":49,"nodeType":"183","messageId":"184","endLine":5,"endColumn":62},{"ruleId":"181","severity":1,"message":"187","line":5,"column":64,"nodeType":"183","messageId":"184","endLine":5,"endColumn":72},{"ruleId":"181","severity":1,"message":"188","line":15,"column":8,"nodeType":"183","messageId":"184","endLine":15,"endColumn":15},{"ruleId":"181","severity":1,"message":"189","line":19,"column":8,"nodeType":"183","messageId":"184","endLine":19,"endColumn":23},{"ruleId":"181","severity":1,"message":"187","line":4,"column":10,"nodeType":"183","messageId":"184","endLine":4,"endColumn":18},{"ruleId":"181","severity":1,"message":"190","line":7,"column":8,"nodeType":"183","messageId":"184","endLine":7,"endColumn":16},{"ruleId":"181","severity":1,"message":"191","line":15,"column":10,"nodeType":"183","messageId":"184","endLine":15,"endColumn":21},{"ruleId":"192","severity":1,"message":"193","line":60,"column":12,"nodeType":"194","endLine":60,"endColumn":14,"suggestions":"195"},{"ruleId":"196","severity":1,"message":"197","line":133,"column":37,"nodeType":"198","endLine":133,"endColumn":48},{"ruleId":"181","severity":1,"message":"199","line":5,"column":8,"nodeType":"183","messageId":"184","endLine":5,"endColumn":17},{"ruleId":"192","severity":1,"message":"193","line":36,"column":8,"nodeType":"194","endLine":36,"endColumn":23,"suggestions":"200"},{"ruleId":"181","severity":1,"message":"185","line":1,"column":27,"nodeType":"183","messageId":"184","endLine":1,"endColumn":36},{"ruleId":"181","severity":1,"message":"201","line":16,"column":12,"nodeType":"183","messageId":"184","endLine":16,"endColumn":16},{"ruleId":"181","severity":1,"message":"202","line":16,"column":18,"nodeType":"183","messageId":"184","endLine":16,"endColumn":25},{"ruleId":"203","severity":1,"message":"204","line":50,"column":3,"nodeType":"198","messageId":"205","endLine":50,"endColumn":98,"fix":"206"},{"ruleId":"181","severity":1,"message":"207","line":3,"column":9,"nodeType":"183","messageId":"184","endLine":3,"endColumn":13},{"ruleId":"181","severity":1,"message":"208","line":6,"column":8,"nodeType":"183","messageId":"184","endLine":6,"endColumn":16},{"ruleId":"181","severity":1,"message":"209","line":10,"column":11,"nodeType":"183","messageId":"184","endLine":10,"endColumn":17},{"ruleId":"181","severity":1,"message":"210","line":11,"column":12,"nodeType":"183","messageId":"184","endLine":11,"endColumn":17},{"ruleId":"192","severity":1,"message":"211","line":31,"column":8,"nodeType":"194","endLine":31,"endColumn":21,"suggestions":"212"},{"ruleId":"181","severity":1,"message":"182","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":25},{"ruleId":"181","severity":1,"message":"185","line":1,"column":27,"nodeType":"183","messageId":"184","endLine":1,"endColumn":36},{"ruleId":"181","severity":1,"message":"187","line":3,"column":16,"nodeType":"183","messageId":"184","endLine":3,"endColumn":24},{"ruleId":"181","severity":1,"message":"213","line":5,"column":8,"nodeType":"183","messageId":"184","endLine":5,"endColumn":13},{"ruleId":"196","severity":1,"message":"214","line":60,"column":21,"nodeType":"198","endLine":60,"endColumn":55},{"ruleId":"215","severity":1,"message":"216","line":6,"column":5,"nodeType":"217","messageId":"218","endLine":6,"endColumn":20},{"ruleId":"181","severity":1,"message":"207","line":3,"column":9,"nodeType":"183","messageId":"184","endLine":3,"endColumn":13},{"ruleId":"181","severity":1,"message":"219","line":2,"column":10,"nodeType":"183","messageId":"184","endLine":2,"endColumn":20},{"ruleId":"181","severity":1,"message":"219","line":2,"column":10,"nodeType":"183","messageId":"184","endLine":2,"endColumn":20},{"ruleId":"181","severity":1,"message":"207","line":3,"column":9,"nodeType":"183","messageId":"184","endLine":3,"endColumn":13},{"ruleId":"192","severity":1,"message":"193","line":25,"column":8,"nodeType":"194","endLine":25,"endColumn":10,"suggestions":"220"},{"ruleId":"221","severity":1,"message":"222","line":39,"column":43,"nodeType":"198","endLine":41,"endColumn":93},{"ruleId":"181","severity":1,"message":"182","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":25},{"ruleId":"181","severity":1,"message":"219","line":4,"column":10,"nodeType":"183","messageId":"184","endLine":4,"endColumn":20},{"ruleId":"181","severity":1,"message":"182","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":25},{"ruleId":"181","severity":1,"message":"219","line":4,"column":10,"nodeType":"183","messageId":"184","endLine":4,"endColumn":20},{"ruleId":"181","severity":1,"message":"223","line":3,"column":8,"nodeType":"183","messageId":"184","endLine":3,"endColumn":17},{"ruleId":"181","severity":1,"message":"209","line":12,"column":7,"nodeType":"183","messageId":"184","endLine":12,"endColumn":13},{"ruleId":"181","severity":1,"message":"182","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":25},{"ruleId":"181","severity":1,"message":"219","line":4,"column":10,"nodeType":"183","messageId":"184","endLine":4,"endColumn":20},{"ruleId":"181","severity":1,"message":"224","line":11,"column":38,"nodeType":"183","messageId":"184","endLine":11,"endColumn":45},{"ruleId":"181","severity":1,"message":"182","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":25},{"ruleId":"181","severity":1,"message":"219","line":4,"column":10,"nodeType":"183","messageId":"184","endLine":4,"endColumn":20},{"ruleId":"181","severity":1,"message":"224","line":10,"column":36,"nodeType":"183","messageId":"184","endLine":10,"endColumn":43},{"ruleId":"181","severity":1,"message":"207","line":3,"column":9,"nodeType":"183","messageId":"184","endLine":3,"endColumn":13},{"ruleId":"181","severity":1,"message":"225","line":4,"column":8,"nodeType":"183","messageId":"184","endLine":4,"endColumn":17},{"ruleId":"181","severity":1,"message":"226","line":8,"column":9,"nodeType":"183","messageId":"184","endLine":8,"endColumn":15},{"ruleId":"181","severity":1,"message":"208","line":9,"column":8,"nodeType":"183","messageId":"184","endLine":9,"endColumn":16},{"ruleId":"181","severity":1,"message":"227","line":16,"column":12,"nodeType":"183","messageId":"184","endLine":16,"endColumn":21},{"ruleId":"181","severity":1,"message":"228","line":17,"column":11,"nodeType":"183","messageId":"184","endLine":17,"endColumn":27},{"ruleId":"181","severity":1,"message":"229","line":20,"column":11,"nodeType":"183","messageId":"184","endLine":20,"endColumn":26},{"ruleId":"192","severity":1,"message":"193","line":37,"column":8,"nodeType":"194","endLine":37,"endColumn":10,"suggestions":"230"},{"ruleId":"221","severity":1,"message":"222","line":51,"column":43,"nodeType":"198","endLine":53,"endColumn":93},{"ruleId":"231","severity":1,"message":"232","line":22,"column":1,"nodeType":"233","endLine":45,"endColumn":3},{"ruleId":"181","severity":1,"message":"182","line":1,"column":17,"nodeType":"183","messageId":"184","endLine":1,"endColumn":25},{"ruleId":"181","severity":1,"message":"219","line":4,"column":10,"nodeType":"183","messageId":"184","endLine":4,"endColumn":20},{"ruleId":"181","severity":1,"message":"234","line":4,"column":28,"nodeType":"183","messageId":"184","endLine":4,"endColumn":33},{"ruleId":"181","severity":1,"message":"235","line":5,"column":13,"nodeType":"183","messageId":"184","endLine":5,"endColumn":16},{"ruleId":"181","severity":1,"message":"224","line":12,"column":38,"nodeType":"183","messageId":"184","endLine":12,"endColumn":45},{"ruleId":"181","severity":1,"message":"236","line":13,"column":11,"nodeType":"183","messageId":"184","endLine":13,"endColumn":13},{"ruleId":"181","severity":1,"message":"182","line":1,"column":33,"nodeType":"183","messageId":"184","endLine":1,"endColumn":41},{"ruleId":"181","severity":1,"message":"237","line":10,"column":10,"nodeType":"183","messageId":"184","endLine":10,"endColumn":20},{"ruleId":"181","severity":1,"message":"238","line":62,"column":7,"nodeType":"183","messageId":"184","endLine":62,"endColumn":13},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'RedirectProps' is defined but never used.","'Redirect' is defined but never used.","'Profile' is defined but never used.","'PicUploadNoCrop' is defined but never used.","'ReactDOM' is defined but never used.","'deleteboard' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tokens'. Either include it or remove the dependency array.","ArrayExpression",["239"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'InfoModal' is defined but never used.",["240"],"'user' is assigned a value but never used.","'Setuser' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"241","text":"242"},"'Link' is defined but never used.","'NewTopic' is defined but never used.","'tokens' is assigned a value but never used.","'topic' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'pk'. Either include it or remove the dependency array.",["243"],"'axios' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'withFormik' is defined but never used.",["244"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'BoardForm' is defined but never used.","'history' is assigned a value but never used.","'CropModal' is defined but never used.","'Button' is defined but never used.","'showTopic' is assigned a value but never used.","'handleCloseTopic' is assigned a value but never used.","'handleShowTopic' is assigned a value but never used.",["245"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Field' is defined but never used.","'Yup' is defined but never used.","'id' is assigned a value but never used.","'withStyles' is defined but never used.","'styles' is assigned a value but never used.",{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},[2281,2281]," rel=\"noreferrer\"",{"desc":"250","fix":"251"},{"desc":"246","fix":"252"},{"desc":"246","fix":"253"},"Update the dependencies array to be: [tokens]",{"range":"254","text":"255"},"Update the dependencies array to be: [id, showTopic, tokens]",{"range":"256","text":"257"},"Update the dependencies array to be: [id, pk, showPost]",{"range":"258","text":"259"},{"range":"260","text":"255"},{"range":"261","text":"255"},[1914,1916],"[tokens]",[1097,1112],"[id, showTopic, tokens]",[1032,1045],"[id, pk, showPost]",[703,705],[1117,1119]]