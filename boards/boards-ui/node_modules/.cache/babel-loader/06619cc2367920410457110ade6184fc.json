{"ast":null,"code":"import React from'react';import{withFormik,Form,Field}from'formik';import*as Yup from'yup';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LoginPage=function LoginPage(props){var loginPageStyle={margin:\"32px auto 37px\",maxWidth:\"530px\",background:\"#fff\",padding:\"30px\",borderRadius:\"10px\",boxShadow:\"0px 0px 10px 10px rgba(0,0,0,0.15)\"};var touched=props.touched,errors=props.errors;return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"login-wrapper\",style:loginPageStyle,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login Page\"}),/*#__PURE__*/_jsxs(Form,{className:\"form-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email\"}),/*#__PURE__*/_jsx(Field,{type:\"text\",name:\"email\",className:\"form-control\",placeholder:\"Email\"}),touched.email&&errors.email&&/*#__PURE__*/_jsx(\"span\",{className:\"help-block text-danger\",children:errors.email})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password\"}),/*#__PURE__*/_jsx(Field,{type:\"password\",name:\"password\",className:\"form-control\",placeholder:\"Password\"}),touched.password&&errors.password&&/*#__PURE__*/_jsx(\"span\",{className:\"help-block text-danger\",children:errors.password})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",children:\"Login\"})]})]})})});};var LoginFormik=withFormik({mapPropsToValues:function mapPropsToValues(props){return{email:props.email||'',password:props.password||''};},validationSchema:Yup.object().shape({email:Yup.string().email('Email not valid').required('Email is required'),password:Yup.string().required('Password is required')}),handleSubmit:function handleSubmit(values){var REST_API_URL=\"YOUR_REST_API_URL\";fetch(REST_API_URL,{method:'post',body:JSON.stringify(values)}).then(function(response){if(response.ok){return response.json();}else{// HANDLE ERROR\nthrow new Error('Something went wrong');}}).then(function(data){// HANDLE RESPONSE DATA\nconsole.log(data);}).catch(function(error){// HANDLE ERROR\nconsole.log(error);});}})(LoginPage);export default LoginFormik;","map":{"version":3,"sources":["/home/user/Desktop/react_board/boards/boards-ui/src/components/signUpform.js"],"names":["React","withFormik","Form","Field","Yup","LoginPage","props","loginPageStyle","margin","maxWidth","background","padding","borderRadius","boxShadow","touched","errors","email","password","LoginFormik","mapPropsToValues","validationSchema","object","shape","string","required","handleSubmit","values","REST_API_URL","fetch","method","body","JSON","stringify","then","response","ok","json","Error","data","console","log","catch","error"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withFormik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\n\nconst LoginPage = (props) => {\n  const loginPageStyle = {\n    margin: \"32px auto 37px\",\n    maxWidth: \"530px\",\n    background: \"#fff\",\n    padding: \"30px\",\n    borderRadius: \"10px\",\n    boxShadow: \"0px 0px 10px 10px rgba(0,0,0,0.15)\"\n  };\n  const { touched, errors } = props;\n  return(\n    <React.Fragment>\n      <div className=\"container\">\n        <div className=\"login-wrapper\" style={loginPageStyle}>\n          <h2>Login Page</h2>\n          <Form className=\"form-container\">\n            <div className=\"form-group\">\n              <label htmlFor=\"email\">Email</label>\n              <Field type=\"text\" name=\"email\" className={\"form-control\"} placeholder=\"Email\" />\n              { touched.email && errors.email && <span className=\"help-block text-danger\">{errors.email}</span> }\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <Field type=\"password\" name=\"password\" className={\"form-control\"} placeholder=\"Password\" />\n              { touched.password && errors.password && <span className=\"help-block text-danger\">{errors.password}</span> }\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n          </Form>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nconst LoginFormik = withFormik({\n  mapPropsToValues: (props) => {\n    return {\n      email: props.email || '',\n      password: props.password || ''\n    }\n  },\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email('Email not valid').required('Email is required'),\n    password: Yup.string().required('Password is required')\n  }),\n  handleSubmit: (values) => {\n    const REST_API_URL = \"YOUR_REST_API_URL\";\n    fetch(REST_API_URL, {\n      method: 'post',\n      body: JSON.stringify(values)\n    }).then(response=> {\n      if (response.ok) {\n        return response.json();\n      } else {\n        // HANDLE ERROR\n        throw new Error('Something went wrong');\n      }\n    }).then(data => {\n      // HANDLE RESPONSE DATA\n      console.log(data);\n    }).catch((error) => {\n      // HANDLE ERROR\n      console.log(error);\n    });\n  }\n})(LoginPage);\n\nexport default LoginFormik;"]},"metadata":{},"sourceType":"module"}