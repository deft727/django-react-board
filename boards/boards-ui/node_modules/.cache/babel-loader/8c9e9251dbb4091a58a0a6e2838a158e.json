{"ast":null,"code":"import _objectSpread from \"/home/user/Desktop/react_board/boards/boards-ui/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { logger, FILE_STATES } from \"@rpldy/shared\";\nimport { MOCK_SENDER_TYPE } from \"./consts\";\nimport { MOCK_DEFAULTS } from \"./defaults\";\n\nvar createRequest = function createRequest(options, items) {\n  var start = performance.now();\n  var progressEventsData = [];\n  var isCancelled = false,\n      isDone = false,\n      progressCallback = null,\n      progressTimeouts = null,\n      cancelRequest = null;\n\n  var clearTimeouts = function clearTimeouts() {\n    if (progressTimeouts) {\n      progressTimeouts.forEach(function (handle) {\n        clearTimeout(handle);\n      });\n      progressTimeouts = null;\n    }\n  };\n\n  var abort = function abort() {\n    isCancelled = true;\n    isDone = true;\n\n    if (cancelRequest) {\n      cancelRequest();\n    }\n\n    clearTimeouts();\n    return true;\n  };\n\n  var p = new Promise(function (resolve, reject) {\n    cancelRequest = reject;\n    setTimeout(function () {\n      isDone = true;\n      resolve({\n        options: options,\n        time: performance.now() - start,\n        progressEvents: progressEventsData\n      });\n      clearTimeouts();\n    }, options.delay || 0);\n  });\n\n  if (options.progressIntervals) {\n    progressTimeouts = options.progressIntervals.map(function (amount) {\n      var perc = amount / 100;\n      var ms = (options.delay || 0) * perc;\n      return setTimeout(function () {\n        if (!isCancelled && !isDone && progressCallback) {\n          var event = {\n            total: options.fileSize || 0,\n            loaded: (options.fileSize || 0) * perc\n          };\n          progressEventsData.push(event);\n          progressCallback(event, items);\n        }\n      }, ms);\n    });\n  }\n\n  return {\n    //$FlowExpectedError[method-unbinding] flow 0.153 !!!\n    then: p.then.bind(p),\n    abort: abort,\n    onProgress: function onProgress(cb) {\n      progressCallback = cb;\n    }\n  };\n};\n\nvar processResponse = function processResponse(request, options, sendOptions) {\n  return request.then(function (mockResponse) {\n    var _sendOptions$formatSe;\n\n    logger.debugLog(\"uploady.mockSender: mock request finished successfully\");\n    var mockResponseData = {\n      sendOptions: sendOptions,\n      mock: true,\n      success: true\n    };\n    var mockHeaders = {\n      \"x-request-type\": \"react-uploady.mockSender\"\n    };\n    var mockStatus = options.responseStatus || 200;\n    return {\n      status: mockStatus,\n      state: FILE_STATES.FINISHED,\n      response: _objectSpread(_objectSpread({}, mockResponse), {}, {\n        headers: mockHeaders,\n        data: options.response || ((_sendOptions$formatSe = sendOptions.formatServerResponse) === null || _sendOptions$formatSe === void 0 ? void 0 : _sendOptions$formatSe.call(sendOptions, JSON.stringify(mockResponseData), mockStatus, mockHeaders)) || mockResponseData\n      })\n    };\n  }).catch(function (err) {\n    logger.debugLog(\"uploady.mockSender: mock request was aborted\", err);\n    return {\n      status: 0,\n      state: FILE_STATES.ABORTED,\n      response: \"abort\"\n    };\n  });\n};\n\nexport default (function (options) {\n  var mockOptions = _objectSpread(_objectSpread({}, MOCK_DEFAULTS), options);\n\n  var update = function update(updated) {\n    mockOptions = _objectSpread(_objectSpread({}, mockOptions), updated);\n  };\n\n  var send = function send(items, url, sendOptions, onProgress) {\n    logger.debugLog(\"uploady.mockSender: about to make a mock request for items: \", items);\n    var request = createRequest(mockOptions, items);\n    request.onProgress(onProgress);\n    return {\n      request: processResponse(request, mockOptions, sendOptions),\n      abort: request.abort,\n      senderType: MOCK_SENDER_TYPE\n    };\n  };\n\n  return {\n    send: send,\n    update: update\n  };\n});","map":{"version":3,"sources":["/home/user/Desktop/react_board/boards/boards-ui/node_modules/@rpldy/mock-sender/lib/esm/mockSender.js"],"names":["logger","FILE_STATES","MOCK_SENDER_TYPE","MOCK_DEFAULTS","createRequest","options","items","start","performance","now","progressEventsData","isCancelled","isDone","progressCallback","progressTimeouts","cancelRequest","clearTimeouts","forEach","handle","clearTimeout","abort","p","Promise","resolve","reject","setTimeout","time","progressEvents","delay","progressIntervals","map","amount","perc","ms","event","total","fileSize","loaded","push","then","bind","onProgress","cb","processResponse","request","sendOptions","mockResponse","_sendOptions$formatSe","debugLog","mockResponseData","mock","success","mockHeaders","mockStatus","responseStatus","status","state","FINISHED","response","headers","data","formatServerResponse","call","JSON","stringify","catch","err","ABORTED","mockOptions","update","updated","send","url","senderType"],"mappings":"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","sourcesContent":["import { logger, FILE_STATES } from \"@rpldy/shared\";\nimport { MOCK_SENDER_TYPE } from \"./consts\";\nimport { MOCK_DEFAULTS } from \"./defaults\";\n\nconst createRequest = (options, items) => {\n  const start = performance.now();\n  const progressEventsData = [];\n  let isCancelled = false,\n      isDone = false,\n      progressCallback = null,\n      progressTimeouts = null,\n      cancelRequest = null;\n\n  const clearTimeouts = () => {\n    if (progressTimeouts) {\n      progressTimeouts.forEach(handle => {\n        clearTimeout(handle);\n      });\n      progressTimeouts = null;\n    }\n  };\n\n  const abort = () => {\n    isCancelled = true;\n    isDone = true;\n\n    if (cancelRequest) {\n      cancelRequest();\n    }\n\n    clearTimeouts();\n    return true;\n  };\n\n  const p = new Promise((resolve, reject) => {\n    cancelRequest = reject;\n    setTimeout(() => {\n      isDone = true;\n      resolve({\n        options,\n        time: performance.now() - start,\n        progressEvents: progressEventsData\n      });\n      clearTimeouts();\n    }, options.delay || 0);\n  });\n\n  if (options.progressIntervals) {\n    progressTimeouts = options.progressIntervals.map(amount => {\n      const perc = amount / 100;\n      const ms = (options.delay || 0) * perc;\n      return setTimeout(() => {\n        if (!isCancelled && !isDone && progressCallback) {\n          const event = {\n            total: options.fileSize || 0,\n            loaded: (options.fileSize || 0) * perc\n          };\n          progressEventsData.push(event);\n          progressCallback(event, items);\n        }\n      }, ms);\n    });\n  }\n\n  return {\n    //$FlowExpectedError[method-unbinding] flow 0.153 !!!\n    then: p.then.bind(p),\n    abort,\n    onProgress: cb => {\n      progressCallback = cb;\n    }\n  };\n};\n\nconst processResponse = (request, options, sendOptions) => {\n  return request.then(mockResponse => {\n    var _sendOptions$formatSe;\n\n    logger.debugLog(\"uploady.mockSender: mock request finished successfully\");\n    const mockResponseData = {\n      sendOptions,\n      mock: true,\n      success: true\n    };\n    const mockHeaders = {\n      \"x-request-type\": \"react-uploady.mockSender\"\n    };\n    const mockStatus = options.responseStatus || 200;\n    return {\n      status: mockStatus,\n      state: FILE_STATES.FINISHED,\n      response: { ...mockResponse,\n        headers: mockHeaders,\n        data: options.response || ((_sendOptions$formatSe = sendOptions.formatServerResponse) === null || _sendOptions$formatSe === void 0 ? void 0 : _sendOptions$formatSe.call(sendOptions, JSON.stringify(mockResponseData), mockStatus, mockHeaders)) || mockResponseData\n      }\n    };\n  }).catch(err => {\n    logger.debugLog(\"uploady.mockSender: mock request was aborted\", err);\n    return {\n      status: 0,\n      state: FILE_STATES.ABORTED,\n      response: \"abort\"\n    };\n  });\n};\n\nexport default (options => {\n  let mockOptions = { ...MOCK_DEFAULTS,\n    ...options\n  };\n\n  const update = updated => {\n    mockOptions = { ...mockOptions,\n      ...updated\n    };\n  };\n\n  const send = (items, url, sendOptions, onProgress) => {\n    logger.debugLog(\"uploady.mockSender: about to make a mock request for items: \", items);\n    const request = createRequest(mockOptions, items);\n    request.onProgress(onProgress);\n    return {\n      request: processResponse(request, mockOptions, sendOptions),\n      abort: request.abort,\n      senderType: MOCK_SENDER_TYPE\n    };\n  };\n\n  return {\n    send,\n    update\n  };\n});"]},"metadata":{},"sourceType":"module"}