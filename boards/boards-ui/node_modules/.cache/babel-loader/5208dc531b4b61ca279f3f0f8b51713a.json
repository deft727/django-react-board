{"ast":null,"code":"import { DEBUG_LOG_KEY } from \"./consts\";\nimport hasWindow from \"./utils/hasWindow\";\nvar isDebug;\n\nvar isDebugOn = function isDebugOn() {\n  if (typeof isDebug !== \"boolean\") {\n    isDebug = hasWindow() && (\"location\" in window && !!~window.location.search.indexOf(\"rpldy_debug=true\") || window[DEBUG_LOG_KEY] === true);\n  }\n\n  return !!isDebug;\n};\n\nvar setDebug = function setDebug(debugOn) {\n  if (hasWindow()) {\n    window[DEBUG_LOG_KEY] = debugOn;\n  }\n\n  isDebug = debugOn ? true : null;\n};\n\nvar debugLog = function debugLog() {\n  if (isDebugOn()) {\n    var _console;\n\n    // eslint-disable-next-line no-console\n    (_console = console).log.apply(_console, arguments);\n  }\n};\n\nexport { isDebugOn, setDebug, debugLog };","map":{"version":3,"sources":["/home/user/Desktop/react_board/boards/boards-ui/node_modules/@rpldy/shared/lib/esm/logger.js"],"names":["DEBUG_LOG_KEY","hasWindow","isDebug","isDebugOn","window","location","search","indexOf","setDebug","debugOn","debugLog","console","log"],"mappings":"AAAA,SAASA,aAAT,QAA8B,UAA9B;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,IAAIC,OAAJ;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,MAAI,OAAOD,OAAP,KAAmB,SAAvB,EAAkC;AAChCA,IAAAA,OAAO,GAAGD,SAAS,OAAO,cAAcG,MAAd,IAAwB,CAAC,CAAC,CAACA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuBC,OAAvB,CAA+B,kBAA/B,CAA3B,IAAiFH,MAAM,CAACJ,aAAD,CAAN,KAA0B,IAAlH,CAAnB;AACD;;AAED,SAAO,CAAC,CAACE,OAAT;AACD,CAND;;AAQA,IAAMM,QAAQ,GAAG,SAAXA,QAAW,CAAAC,OAAO,EAAI;AAC1B,MAAIR,SAAS,EAAb,EAAiB;AACfG,IAAAA,MAAM,CAACJ,aAAD,CAAN,GAAwBS,OAAxB;AACD;;AAEDP,EAAAA,OAAO,GAAGO,OAAO,GAAG,IAAH,GAAU,IAA3B;AACD,CAND;;AAQA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAa;AAC5B,MAAIP,SAAS,EAAb,EAAiB;AAAA;;AACf;AACA,gBAAAQ,OAAO,EAACC,GAAR;AACD;AACF,CALD;;AAOA,SAAST,SAAT,EAAoBK,QAApB,EAA8BE,QAA9B","sourcesContent":["import { DEBUG_LOG_KEY } from \"./consts\";\nimport hasWindow from \"./utils/hasWindow\";\nlet isDebug;\n\nconst isDebugOn = () => {\n  if (typeof isDebug !== \"boolean\") {\n    isDebug = hasWindow() && (\"location\" in window && !!~window.location.search.indexOf(\"rpldy_debug=true\") || window[DEBUG_LOG_KEY] === true);\n  }\n\n  return !!isDebug;\n};\n\nconst setDebug = debugOn => {\n  if (hasWindow()) {\n    window[DEBUG_LOG_KEY] = debugOn;\n  }\n\n  isDebug = debugOn ? true : null;\n};\n\nconst debugLog = (...args) => {\n  if (isDebugOn()) {\n    // eslint-disable-next-line no-console\n    console.log(...args);\n  }\n};\n\nexport { isDebugOn, setDebug, debugLog };"]},"metadata":{},"sourceType":"module"}