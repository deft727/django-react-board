{"ast":null,"code":"import _slicedToArray from\"/home/user/Desktop/react_board/boards/boards-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function BoardDetail(_ref){var match=_ref.match;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),board=_useState2[0],Setboard=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),topic=_useState4[0],SetTopic=_useState4[1];var id=match.params.id;useEffect(function(){axios({method:\"GET\",url:\"http://127.0.0.1:8000/api/board/\".concat(id,\"/\")}).then(function(response){Setboard(response.data);SetTopic(response.data.topics);});},[id]);return/*#__PURE__*/_jsxs(\"table\",{className:\"table table-striped mb-4\",children:[/*#__PURE__*/_jsx(\"p\",{children:board.name}),/*#__PURE__*/_jsx(\"thead\",{className:\"thead-inverse\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Topic\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Starter\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Replies\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Views\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Last Update\"})]})}),topics.map(function(t){return/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"infinite-item\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"mb-0\",children:/*#__PURE__*/_jsx(\"a\",{href:\"\",children:t.subject})}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:\"Pages:\"})]}),/*#__PURE__*/_jsx(\"td\",{className:\"align-middle\",children:t.starter.username}),/*#__PURE__*/_jsx(\"td\",{className:\"align-middle\",children:t.replies}),/*#__PURE__*/_jsx(\"td\",{className:\"align-middle\",children:t.views}),/*#__PURE__*/_jsx(\"td\",{className:\"align-middle\",children:t.last_updated})]})})},t.id);})]});}export default BoardDetail;","map":{"version":3,"sources":["/home/user/Desktop/react_board/boards/boards-ui/src/components/board_detail/BoardDetail.js"],"names":["React","useState","useEffect","axios","BoardDetail","match","board","Setboard","topic","SetTopic","id","params","method","url","then","response","data","topics","name","map","t","subject","starter","username","replies","views","last_updated"],"mappings":"kIAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,wFAEA,QAASC,CAAAA,WAAT,MAAgC,IAATC,CAAAA,KAAS,MAATA,KAAS,CAE5B,cAA0BJ,QAAQ,CAAC,EAAD,CAAlC,wCAAOK,KAAP,eAAcC,QAAd,eACA,eAA0BN,QAAQ,CAAC,EAAD,CAAlC,yCAAOO,KAAP,eAAcC,QAAd,eACA,GAAMC,CAAAA,EAAE,CAAGL,KAAK,CAACM,MAAN,CAAaD,EAAxB,CAEAR,SAAS,CAAC,UAAM,CAEZC,KAAK,CAAC,CACFS,MAAM,CAAE,KADN,CAEFC,GAAG,2CAAqCH,EAArC,KAFD,CAAD,CAAL,CAGGI,IAHH,CAGQ,SAAAC,QAAQ,CAAI,CAChBR,QAAQ,CAACQ,QAAQ,CAACC,IAAV,CAAR,CACAP,QAAQ,CAACM,QAAQ,CAACC,IAAT,CAAcC,MAAf,CAAR,CACH,CAND,EAOH,CATQ,CASN,CAACP,EAAD,CATM,CAAT,CAWA,mBACJ,eAAO,SAAS,CAAC,0BAAjB,wBACI,mBAAIJ,KAAK,CAACY,IAAV,EADJ,cAEE,cAAO,SAAS,CAAC,eAAjB,uBACE,mCACE,6BADF,cAEE,+BAFF,cAGE,+BAHF,cAIE,6BAJF,cAKE,mCALF,GADF,EAFF,CAWYD,MAAM,CAACE,GAAP,CAAW,SAAAC,CAAC,qBACtB,oCACE,YAAK,SAAS,CAAC,eAAf,uBACE,mCACE,mCACE,UAAG,SAAS,CAAC,MAAb,uBACE,UAAG,IAAI,CAAC,EAAR,UAAaA,CAAC,CAACC,OAAf,EADF,EADF,cAIE,cAAO,SAAS,CAAC,YAAjB,oBAJF,GADF,cASE,WAAI,SAAS,CAAC,cAAd,UAA+BD,CAAC,CAACE,OAAF,CAAUC,QAAzC,EATF,cAUE,WAAI,SAAS,CAAC,cAAd,UAA+BH,CAAC,CAACI,OAAjC,EAVF,cAWE,WAAI,SAAS,CAAC,cAAd,UAA+BJ,CAAC,CAACK,KAAjC,EAXF,cAYE,WAAI,SAAS,CAAC,cAAd,UAA+BL,CAAC,CAACM,YAAjC,EAZF,GADF,EADF,EAAaN,CAAC,CAACV,EAAf,CADsB,EAAZ,CAXZ,GADI,CAsCH,CAED,cAAeN,CAAAA,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\n\nfunction BoardDetail({ match }) {\n\n    const [board, Setboard] = useState({})\n    const [topic, SetTopic] = useState([])\n    const id = match.params.id\n\n    useEffect(() => {\n\n        axios({\n            method: \"GET\",\n            url: `http://127.0.0.1:8000/api/board/${id}/`\n        }).then(response => {\n            Setboard(response.data)\n            SetTopic(response.data.topics)\n        })\n    }, [id])\n\n    return(\n<table className=\"table table-striped mb-4\">\n    <p>{board.name}</p>\n  <thead className=\"thead-inverse\">\n    <tr>\n      <th>Topic</th>\n      <th>Starter</th>\n      <th>Replies</th>\n      <th>Views</th>\n      <th>Last Update</th>\n    </tr>\n  </thead>\n           {topics.map(t => (\n  <tbody  key={t.id}>\n    <div className=\"infinite-item\">\n      <tr>\n        <td>\n          <p className=\"mb-0\">\n            <a href=\"\">{ t.subject }</a>\n          </p>\n          <small className=\"text-muted\">\n            Pages:\n          </small>\n        </td>\n        <td className=\"align-middle\">{ t.starter.username }</td>\n        <td className=\"align-middle\">{ t.replies }</td>\n        <td className=\"align-middle\">{ t.views }</td>\n        <td className=\"align-middle\">{ t.last_updated }</td>\n      </tr>\n\n    </div>\n\n  </tbody>\n               ))}\n</table>\n\n\n    )\n}\n\nexport default BoardDetail;"]},"metadata":{},"sourceType":"module"}