{"ast":null,"code":"import _objectSpread from \"/home/user/Desktop/react_board/boards/boards-ui/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { hasWindow, isProduction } from \"@rpldy/shared\";\nimport { unwrap, isProxiable, isProxy } from \"@rpldy/simple-state\";\nimport { DEFAULT_OPTIONS } from \"./defaults\";\nvar FILE_LIST_SUPPORT = hasWindow() && \"FileList\" in window;\n\nvar getMandatoryDestination = function getMandatoryDestination(dest) {\n  return _objectSpread({\n    params: {}\n  }, dest);\n};\n\nvar getMandatoryOptions = function getMandatoryOptions(options) {\n  return _objectSpread(_objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options), {}, {\n    destination: options && options.destination ? getMandatoryDestination(options.destination) : null\n  });\n};\n\nvar getIsFileList = function getIsFileList(files) {\n  return (//in case files list was created in a different context(window) need to check toString\n    FILE_LIST_SUPPORT && files instanceof FileList || files.toString() === \"[object FileList]\"\n  );\n};\n/***\n * will unwrap object from proxy\n * if obj itself isnt a proxy, will look for a proxy max 2 levels deep\n */\n\n\nvar deepProxyUnwrap = function deepProxyUnwrap(obj) {\n  var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var result = obj;\n\n  if (!isProduction()) {\n    if (level < 3 && isProxy(obj)) {\n      result = unwrap(obj);\n    } else if (level < 3 && isProxiable(obj)) {\n      result = Array.isArray(obj) ? obj.map(function (sub) {\n        return deepProxyUnwrap(sub, level + 1);\n      }) : Object.keys(obj).reduce(function (res, key) {\n        res[key] = deepProxyUnwrap(obj[key], level + 1);\n        return res;\n      }, {});\n    }\n  }\n\n  return result;\n};\n\nexport { getMandatoryOptions, getIsFileList, deepProxyUnwrap };","map":{"version":3,"sources":["/home/user/Desktop/react_board/boards/boards-ui/node_modules/@rpldy/uploader/lib/esm/utils.js"],"names":["hasWindow","isProduction","unwrap","isProxiable","isProxy","DEFAULT_OPTIONS","FILE_LIST_SUPPORT","window","getMandatoryDestination","dest","params","getMandatoryOptions","options","destination","getIsFileList","files","FileList","toString","deepProxyUnwrap","obj","level","result","Array","isArray","map","sub","Object","keys","reduce","res","key"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,YAApB,QAAwC,eAAxC;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,OAA9B,QAA6C,qBAA7C;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,IAAMC,iBAAiB,GAAGN,SAAS,MAAM,cAAcO,MAAvD;;AAEA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAC,IAAI,EAAI;AACtC;AACEC,IAAAA,MAAM,EAAE;AADV,KAEKD,IAFL;AAID,CALD;;AAOA,IAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,OAAO,EAAI;AACrC,uDAAYP,eAAZ,GACKO,OADL;AAEEC,IAAAA,WAAW,EAAED,OAAO,IAAIA,OAAO,CAACC,WAAnB,GAAiCL,uBAAuB,CAACI,OAAO,CAACC,WAAT,CAAxD,GAAgF;AAF/F;AAID,CALD;;AAOA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK;AAAA,SAAI;AAC/BT,IAAAA,iBAAiB,IAAIS,KAAK,YAAYC,QAAtC,IAAkDD,KAAK,CAACE,QAAN,OAAqB;AAD5C;AAAA,CAA3B;AAEA;AACA;AACA;AACA;;;AAGA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAoB;AAAA,MAAdC,KAAc,uEAAN,CAAM;AAC1C,MAAIC,MAAM,GAAGF,GAAb;;AAEA,MAAI,CAAClB,YAAY,EAAjB,EAAqB;AACnB,QAAImB,KAAK,GAAG,CAAR,IAAahB,OAAO,CAACe,GAAD,CAAxB,EAA+B;AAC7BE,MAAAA,MAAM,GAAGnB,MAAM,CAACiB,GAAD,CAAf;AACD,KAFD,MAEO,IAAIC,KAAK,GAAG,CAAR,IAAajB,WAAW,CAACgB,GAAD,CAA5B,EAAmC;AACxCE,MAAAA,MAAM,GAAGC,KAAK,CAACC,OAAN,CAAcJ,GAAd,IAAqBA,GAAG,CAACK,GAAJ,CAAQ,UAAAC,GAAG;AAAA,eAAIP,eAAe,CAACO,GAAD,EAAML,KAAK,GAAG,CAAd,CAAnB;AAAA,OAAX,CAArB,GAAuEM,MAAM,CAACC,IAAP,CAAYR,GAAZ,EAAiBS,MAAjB,CAAwB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACpHD,QAAAA,GAAG,CAACC,GAAD,CAAH,GAAWZ,eAAe,CAACC,GAAG,CAACW,GAAD,CAAJ,EAAWV,KAAK,GAAG,CAAnB,CAA1B;AACA,eAAOS,GAAP;AACD,OAH+E,EAG7E,EAH6E,CAAhF;AAID;AACF;;AAED,SAAOR,MAAP;AACD,CAfD;;AAiBA,SAASV,mBAAT,EAA8BG,aAA9B,EAA6CI,eAA7C","sourcesContent":["import { hasWindow, isProduction } from \"@rpldy/shared\";\nimport { unwrap, isProxiable, isProxy } from \"@rpldy/simple-state\";\nimport { DEFAULT_OPTIONS } from \"./defaults\";\nconst FILE_LIST_SUPPORT = hasWindow() && \"FileList\" in window;\n\nconst getMandatoryDestination = dest => {\n  return {\n    params: {},\n    ...dest\n  };\n};\n\nconst getMandatoryOptions = options => {\n  return { ...DEFAULT_OPTIONS,\n    ...options,\n    destination: options && options.destination ? getMandatoryDestination(options.destination) : null\n  };\n};\n\nconst getIsFileList = files => //in case files list was created in a different context(window) need to check toString\nFILE_LIST_SUPPORT && files instanceof FileList || files.toString() === \"[object FileList]\";\n/***\n * will unwrap object from proxy\n * if obj itself isnt a proxy, will look for a proxy max 2 levels deep\n */\n\n\nconst deepProxyUnwrap = (obj, level = 0) => {\n  let result = obj;\n\n  if (!isProduction()) {\n    if (level < 3 && isProxy(obj)) {\n      result = unwrap(obj);\n    } else if (level < 3 && isProxiable(obj)) {\n      result = Array.isArray(obj) ? obj.map(sub => deepProxyUnwrap(sub, level + 1)) : Object.keys(obj).reduce((res, key) => {\n        res[key] = deepProxyUnwrap(obj[key], level + 1);\n        return res;\n      }, {});\n    }\n  }\n\n  return result;\n};\n\nexport { getMandatoryOptions, getIsFileList, deepProxyUnwrap };"]},"metadata":{},"sourceType":"module"}