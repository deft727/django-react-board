{"ast":null,"code":"import _slicedToArray from\"/home/user/Desktop/react_board/boards/boards-ui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import'bootstrap/dist/css/bootstrap.min.css';import{Link}from'react-router-dom';import{Redirect}from'react-router';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Table(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),boards=_useState2[0],SetBoards=_useState2[1];useEffect(function(){axios({method:\"GET\",url:\"http://127.0.0.1:8000/api/board/\"}).then(function(response){SetBoards(response.data);});},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"table mb-4\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Board\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Topics\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Posts\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Last Post\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Edit\"})]})}),boards.map(function(b){return/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"small\",{className:\"text-muted d-block\",children:/*#__PURE__*/_jsx(Link,{className:\"link-success\",to:{pathname:\"/board/\".concat(b.id,\"/\"),froDashboard:false},children:b.name})})}),/*#__PURE__*/_jsx(\"td\",{className:\"align-middle\",children:b.topics_count}),/*#__PURE__*/_jsx(\"td\",{className:\"align-middle\",children:b.posts_count}),/*#__PURE__*/_jsx(\"td\",{className:\"align-middle\",children:/*#__PURE__*/_jsxs(\"small\",{children:[b.last_post.message,\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"a\",{href:\"\",children:[\"By \",b.last_post.author]})]})}),/*#__PURE__*/_jsx(\"td\",{})]})},b.id);})]})});}export default Table;","map":{"version":3,"sources":["/home/user/Desktop/react_board/boards/boards-ui/src/components/table/Table.js"],"names":["React","useState","useEffect","Link","Redirect","axios","Table","boards","SetBoards","method","url","then","response","data","map","b","pathname","id","froDashboard","name","topics_count","posts_count","last_post","message","author"],"mappings":"kIAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAO,sCAAP,CACA,OAAQC,IAAR,KAAmB,kBAAnB,CACA,OAASC,QAAT,KAAyB,cAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,wFAGA,QAASC,CAAAA,KAAT,EAAiB,CACf,cAA4BL,QAAQ,CAAC,EAAD,CAApC,wCAAOM,MAAP,eAAeC,SAAf,eACCN,SAAS,CAAC,UAAM,CAEXG,KAAK,CAAC,CACFI,MAAM,CAAE,KADN,CAEFC,GAAG,mCAFD,CAAD,CAAL,CAGGC,IAHH,CAGQ,SAAAC,QAAQ,CAAI,CAChBJ,SAAS,CAACI,QAAQ,CAACC,IAAV,CAAT,CACH,CALD,EAMH,CARO,CAQL,EARK,CAAT,CAWD,mBACE,YAAK,SAAS,CAAC,KAAf,uBACI,eAAO,SAAS,CAAC,YAAjB,wBACI,oCACA,mCACI,WAAI,KAAK,CAAC,KAAV,mBADJ,cAEI,WAAI,KAAK,CAAC,KAAV,oBAFJ,cAGI,WAAI,KAAK,CAAC,KAAV,mBAHJ,cAII,WAAI,KAAK,CAAC,KAAV,uBAJJ,cAKI,WAAI,KAAK,CAAC,KAAV,kBALJ,GADA,EADJ,CAUKN,MAAM,CAACO,GAAP,CAAW,SAAAC,CAAC,qBACjB,oCAGA,mCACE,iCACI,cAAO,SAAS,CAAC,oBAAjB,uBAET,KAAC,IAAD,EAAM,SAAS,CAAC,cAAhB,CAA+B,EAAE,CAAE,CAACC,QAAQ,kBAAWD,CAAC,CAACE,EAAb,KAAT,CAA6BC,YAAY,CAAC,KAA1C,CAAnC,UAAuFH,CAAC,CAACI,IAAzF,EAFS,EADJ,EADF,cAQE,WAAI,SAAS,CAAC,cAAd,UACGJ,CAAC,CAACK,YADL,EARF,cAWE,WAAI,SAAS,CAAC,cAAd,UACGL,CAAC,CAACM,WADL,EAXF,cAeE,WAAI,SAAS,CAAC,cAAd,uBAEE,yBACKN,CAAC,CAACO,SAAF,CAAYC,OADjB,kBAC0B,aAD1B,cAEE,WAAG,IAAI,CAAC,EAAR,iBACMR,CAAC,CAACO,SAAF,CAAYE,MADlB,GAFF,GAFF,EAfF,cA0BE,aA1BF,GAHA,EAAYT,CAAC,CAACE,EAAd,CADiB,EAAZ,CAVL,GADJ,EADF,CAuDD,CAGD,cAAeX,CAAAA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Link} from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport axios from 'axios';\n\n\nfunction Table() {\n  const [boards, SetBoards] = useState([])\n   useEffect(() => {\n\n        axios({\n            method: \"GET\",\n            url: `http://127.0.0.1:8000/api/board/`\n        }).then(response => {\n            SetBoards(response.data)\n        })\n    }, [])\n\n\n  return (\n    <div className=\"App\">\n        <table className=\"table mb-4\">\n            <thead>\n            <tr>\n                <th scope=\"col\">Board</th>\n                <th scope=\"col\">Topics</th>\n                <th scope=\"col\">Posts</th>\n                <th scope=\"col\">Last Post</th>\n                <th scope=\"col\">Edit</th>\n            </tr>\n            </thead>\n            {boards.map(b => (\n        <tbody key={b.id}>\n\n\n        <tr>\n          <td>\n              <small className=\"text-muted d-block\">\n\n     <Link className=\"link-success\" to={{pathname:`/board/${b.id}/`, froDashboard:false }}>{b.name}</Link>\n\n              </small>\n          </td>\n          <td className=\"align-middle\">\n            {b.topics_count}\n          </td>\n          <td className=\"align-middle\">\n            {b.posts_count}\n          </td>\n\n          <td className=\"align-middle\">\n\n            <small>\n                {b.last_post.message} <br/>\n              <a href=\"\">\n                By {b.last_post.author}\n              </a>\n            </small>\n          </td>\n\n\n          <td>\n\n          </td>\n\n        </tr>\n\n        </tbody>\n           ))}\n      </table>\n\n\n    </div>\n  );\n}\n\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}