{"ast":null,"code":"import { useEffect } from \"react\";\nimport { logger } from \"@rpldy/shared\";\nimport { useUploadyContext } from \"@rpldy/shared-ui\"; //https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#form-submission-algorithm\n\nvar getUrl = function getUrl(form) {\n  var loc = window.location;\n  var url = form.getAttribute(\"action\") || \"\";\n  url = url.replace(/\\s/g, \"\");\n  var path; // eslint-disable-next-line default-case\n\n  switch (true) {\n    //if empty, use same url as page\n    case url === \"\":\n      url = loc.href;\n      break;\n    //starts with \"/\", make it absolute\n\n    case url.startsWith(\"/\"):\n      url = \"\".concat(loc.protocol, \"//\").concat(loc.host).concat(url);\n      break;\n    //not an http(s) and doesnt start with \"/\", make it relative\n\n    case !/:\\/\\//.test(url):\n      path = loc.pathname.split(\"/\").slice(0, -1).concat(\"\").join(\"/\");\n      url = \"\".concat(loc.protocol, \"//\").concat(loc.host).concat(path).concat(url);\n      break;\n  }\n\n  return url;\n};\n\nvar getDestinationFromInput = function getDestinationFromInput(input) {\n  var form = input.closest(\"form\");\n  var destination = {\n    filesParamName: input.getAttribute(\"name\"),\n    method: undefined,\n    url: undefined\n  };\n\n  if (form) {\n    var method = form.getAttribute(\"method\"),\n        url = getUrl(form);\n    destination.method = method ? method.toUpperCase() : undefined;\n    destination.url = url;\n    logger.debugLog(\"Uploady.useFileInput: using custom input's parent form url \".concat(destination.url, \" and method \").concat(destination.method || \"\"));\n  }\n\n  return destination;\n};\n\nvar useFileInput = function useFileInput(fileInputRef) {\n  var context = useUploadyContext();\n\n  if (fileInputRef) {\n    context.setExternalFileInput(fileInputRef);\n  }\n\n  useEffect(function () {\n    //uses Element.prototype.closest so no IE11 support - use polyfill\n    if (fileInputRef !== null && fileInputRef !== void 0 && fileInputRef.current && \"closest\" in fileInputRef.current) {\n      var input = fileInputRef.current;\n      var uploaderOptions = context.getOptions(); //if no destination was passed, try and get from input's parent form\n\n      if (!uploaderOptions.destination || !uploaderOptions.destination.url) {\n        var domDestination = getDestinationFromInput(input);\n        context.setOptions({\n          destination: domDestination\n        });\n      }\n    }\n  }, [fileInputRef, context]);\n  return !!fileInputRef ? fileInputRef : context.getInternalFileInput();\n};\n\nexport default useFileInput;","map":{"version":3,"sources":["/home/user/Desktop/react_board/boards/boards-ui/node_modules/@rpldy/uploady/lib/esm/useFileInput.js"],"names":["useEffect","logger","useUploadyContext","getUrl","form","loc","window","location","url","getAttribute","replace","path","href","startsWith","protocol","host","test","pathname","split","slice","concat","join","getDestinationFromInput","input","closest","destination","filesParamName","method","undefined","toUpperCase","debugLog","useFileInput","fileInputRef","context","setExternalFileInput","current","uploaderOptions","getOptions","domDestination","setOptions","getInternalFileInput"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\nimport { logger } from \"@rpldy/shared\";\nimport { useUploadyContext } from \"@rpldy/shared-ui\";\n\n//https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#form-submission-algorithm\nconst getUrl = form => {\n  const loc = window.location;\n  let url = form.getAttribute(\"action\") || \"\";\n  url = url.replace(/\\s/g, \"\");\n  let path; // eslint-disable-next-line default-case\n\n  switch (true) {\n    //if empty, use same url as page\n    case url === \"\":\n      url = loc.href;\n      break;\n    //starts with \"/\", make it absolute\n\n    case url.startsWith(\"/\"):\n      url = `${loc.protocol}//${loc.host}${url}`;\n      break;\n    //not an http(s) and doesnt start with \"/\", make it relative\n\n    case !/:\\/\\//.test(url):\n      path = loc.pathname.split(\"/\").slice(0, -1).concat(\"\").join(\"/\");\n      url = `${loc.protocol}//${loc.host}${path}${url}`;\n      break;\n  }\n\n  return url;\n};\n\nconst getDestinationFromInput = input => {\n  const form = input.closest(\"form\");\n  let destination = {\n    filesParamName: input.getAttribute(\"name\"),\n    method: undefined,\n    url: undefined\n  };\n\n  if (form) {\n    const method = form.getAttribute(\"method\"),\n          url = getUrl(form);\n    destination.method = method ? method.toUpperCase() : undefined;\n    destination.url = url;\n    logger.debugLog(`Uploady.useFileInput: using custom input's parent form url ${destination.url} and method ${destination.method || \"\"}`);\n  }\n\n  return destination;\n};\n\nconst useFileInput = fileInputRef => {\n  const context = useUploadyContext();\n\n  if (fileInputRef) {\n    context.setExternalFileInput(fileInputRef);\n  }\n\n  useEffect(() => {\n    //uses Element.prototype.closest so no IE11 support - use polyfill\n    if (fileInputRef !== null && fileInputRef !== void 0 && fileInputRef.current && \"closest\" in fileInputRef.current) {\n      const input = fileInputRef.current;\n      const uploaderOptions = context.getOptions(); //if no destination was passed, try and get from input's parent form\n\n      if (!uploaderOptions.destination || !uploaderOptions.destination.url) {\n        const domDestination = getDestinationFromInput(input);\n        context.setOptions({\n          destination: domDestination\n        });\n      }\n    }\n  }, [fileInputRef, context]);\n  return !!fileInputRef ? fileInputRef : context.getInternalFileInput();\n};\n\nexport default useFileInput;"]},"metadata":{},"sourceType":"module"}