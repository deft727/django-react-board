{"ast":null,"code":"import _objectSpread from \"/home/user/Desktop/react_board/boards/boards-ui/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { isFunction, logger, throttle } from \"@rpldy/shared\";\nimport addLife from \"@rpldy/life-events\";\nimport defaultSend from \"@rpldy/sender\";\nimport { PROGRESS_DELAY, SENDER_EVENTS } from \"./consts\";\nimport { DEFAULT_OPTIONS, DEFAULT_PARAM_NAME } from \"./defaults\";\n\nvar reportItemsProgress = function reportItemsProgress(items, completed, loaded, trigger) {\n  items.forEach(function (item) {\n    logger.debugLog(\"uploady.uploader.processor: file: \".concat(item.id, \" progress event: loaded(\").concat(loaded, \") - completed(\").concat(completed, \")\"));\n    trigger(SENDER_EVENTS.ITEM_PROGRESS, item, completed, loaded);\n  });\n};\n\nvar onItemUploadProgress = function onItemUploadProgress(items, batch, e, trigger) {\n  var completed = Math.min(e.loaded / e.total * 100, 100),\n      completedPerItem = completed / items.length,\n      loadedAverage = e.loaded / items.length;\n  reportItemsProgress(items, completedPerItem, loadedAverage, trigger);\n  trigger(SENDER_EVENTS.BATCH_PROGRESS, batch);\n};\n\nvar createBatchItemsSender = function createBatchItemsSender() {\n  var _addLife = addLife({\n    send: function send(items, batch, batchOptions) {\n      var destination = batchOptions.destination,\n          url = destination === null || destination === void 0 ? void 0 : destination.url;\n      var throttledProgress = throttle(function (e) {\n        return onItemUploadProgress(items, batch, e, trigger);\n      }, PROGRESS_DELAY, true);\n      var send = isFunction(batchOptions.send) ? batchOptions.send : defaultSend;\n      return send(items, url, {\n        method: (destination === null || destination === void 0 ? void 0 : destination.method) || batchOptions.method || DEFAULT_OPTIONS.method,\n        paramName: (destination === null || destination === void 0 ? void 0 : destination.filesParamName) || batchOptions.inputFieldName || DEFAULT_PARAM_NAME,\n        params: _objectSpread(_objectSpread({}, batchOptions.params), destination === null || destination === void 0 ? void 0 : destination.params),\n        forceJsonResponse: batchOptions.forceJsonResponse,\n        withCredentials: batchOptions.withCredentials,\n        formatGroupParamName: batchOptions.formatGroupParamName,\n        headers: destination === null || destination === void 0 ? void 0 : destination.headers,\n        sendWithFormData: batchOptions.sendWithFormData,\n        formatServerResponse: batchOptions.formatServerResponse\n      }, throttledProgress);\n    }\n  }, Object.values(SENDER_EVENTS)),\n      trigger = _addLife.trigger,\n      sender = _addLife.target;\n\n  return sender;\n};\n\nexport default createBatchItemsSender;","map":{"version":3,"sources":["/home/user/Desktop/react_board/boards/boards-ui/node_modules/@rpldy/uploader/lib/esm/batchItemsSender.js"],"names":["isFunction","logger","throttle","addLife","defaultSend","PROGRESS_DELAY","SENDER_EVENTS","DEFAULT_OPTIONS","DEFAULT_PARAM_NAME","reportItemsProgress","items","completed","loaded","trigger","forEach","item","debugLog","id","ITEM_PROGRESS","onItemUploadProgress","batch","e","Math","min","total","completedPerItem","length","loadedAverage","BATCH_PROGRESS","createBatchItemsSender","send","batchOptions","destination","url","throttledProgress","method","paramName","filesParamName","inputFieldName","params","forceJsonResponse","withCredentials","formatGroupParamName","headers","sendWithFormData","formatServerResponse","Object","values","sender","target"],"mappings":"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","sourcesContent":["import { isFunction, logger, throttle } from \"@rpldy/shared\";\nimport addLife from \"@rpldy/life-events\";\nimport defaultSend from \"@rpldy/sender\";\nimport { PROGRESS_DELAY, SENDER_EVENTS } from \"./consts\";\nimport { DEFAULT_OPTIONS, DEFAULT_PARAM_NAME } from \"./defaults\";\n\nconst reportItemsProgress = (items, completed, loaded, trigger) => {\n  items.forEach(item => {\n    logger.debugLog(`uploady.uploader.processor: file: ${item.id} progress event: loaded(${loaded}) - completed(${completed})`);\n    trigger(SENDER_EVENTS.ITEM_PROGRESS, item, completed, loaded);\n  });\n};\n\nconst onItemUploadProgress = (items, batch, e, trigger) => {\n  const completed = Math.min(e.loaded / e.total * 100, 100),\n        completedPerItem = completed / items.length,\n        loadedAverage = e.loaded / items.length;\n  reportItemsProgress(items, completedPerItem, loadedAverage, trigger);\n  trigger(SENDER_EVENTS.BATCH_PROGRESS, batch);\n};\n\nconst createBatchItemsSender = () => {\n  const {\n    trigger,\n    target: sender\n  } = addLife({\n    send: (items, batch, batchOptions) => {\n      const destination = batchOptions.destination,\n            url = destination === null || destination === void 0 ? void 0 : destination.url;\n      const throttledProgress = throttle(e => onItemUploadProgress(items, batch, e, trigger), PROGRESS_DELAY, true);\n      const send = isFunction(batchOptions.send) ? batchOptions.send : defaultSend;\n      return send(items, url, {\n        method: (destination === null || destination === void 0 ? void 0 : destination.method) || batchOptions.method || DEFAULT_OPTIONS.method,\n        paramName: (destination === null || destination === void 0 ? void 0 : destination.filesParamName) || batchOptions.inputFieldName || DEFAULT_PARAM_NAME,\n        params: { //TODO: might need to rethink the order here:\n          ...batchOptions.params,\n          ...(destination === null || destination === void 0 ? void 0 : destination.params)\n        },\n        forceJsonResponse: batchOptions.forceJsonResponse,\n        withCredentials: batchOptions.withCredentials,\n        formatGroupParamName: batchOptions.formatGroupParamName,\n        headers: destination === null || destination === void 0 ? void 0 : destination.headers,\n        sendWithFormData: batchOptions.sendWithFormData,\n        formatServerResponse: batchOptions.formatServerResponse\n      }, throttledProgress);\n    }\n  }, Object.values(SENDER_EVENTS));\n  return sender;\n};\n\nexport default createBatchItemsSender;"]},"metadata":{},"sourceType":"module"}