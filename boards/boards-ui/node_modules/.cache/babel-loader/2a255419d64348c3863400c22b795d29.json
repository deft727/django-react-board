{"ast":null,"code":"import React,{useState}from'react';import'bootstrap/dist/css/bootstrap.min.css';import{Modal,Button}from'react-bootstrap';import{withFormik,Form,Field,Formik}from'formik';import*as Yup from\"yup\";import{withRouter}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function NewPost(props){var openPost=props.openPost,handleClosePost=props.handleClosePost,history=props.history,match=props.match;var id=match.params.id;var pk=match.params.pk;var tokens=localStorage.tokens;var validationSchema=Yup.object().shape({message:Yup.string().required('message is wrong')},[id]);var handleSubmit=function handleSubmit(values){var REST_API_URL=\"http://127.0.0.1:8000/api/board/\".concat(id,\"/topic/\").concat(pk,\"/\");fetch(REST_API_URL,{method:'post',body:JSON.stringify(values),headers:{'Authorization':\"Token \".concat(tokens),'Content-Type':'application/json'}}).then(function(response){if(response.status===201){// props.history.push('/')\nhandleClosePost();}else{// HANDLE ERROR\nhandleClosePost();window.location.reload();throw new Error('Something went wrong');}}).then(function(data){// HANDLE RESPONSE DATA\n}).catch(function(error){// HANDLE ERROR\nconsole.log(error);});};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Modal,{show:openPost,onHide:handleClosePost,children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:\" New Post \"})}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(Formik,{initialValues:{message:\"\"},onSubmit:handleSubmit,validationSchema:validationSchema,children:function children(props){return/*#__PURE__*/_jsxs(Form,{className:\"form-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"message\"}),/*#__PURE__*/_jsx(Field,{type:\"text\",name:\"message\",id:\"message\",className:\"form-control \",placeholder:\"message\"}),props.touched.message&&props.errors.message&&/*#__PURE__*/_jsx(\"span\",{className:\"help-block text-danger\",children:props.errors.message})]}),/*#__PURE__*/_jsxs(Modal.Footer,{children:[/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:handleClosePost,children:\"Close\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary mb-2\",children:\"Create \"})]})]});}})})})]})});}export default withRouter(NewPost);","map":{"version":3,"sources":["/home/user/Desktop/react_board/boards/boards-ui/src/components/NewPost/newpost.js"],"names":["React","useState","Modal","Button","withFormik","Form","Field","Formik","Yup","withRouter","NewPost","props","openPost","handleClosePost","history","match","id","params","pk","tokens","localStorage","validationSchema","object","shape","message","string","required","handleSubmit","values","REST_API_URL","fetch","method","body","JSON","stringify","headers","then","response","status","window","location","reload","Error","data","catch","error","console","log","touched","errors"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,sCAAP,CACA,OAASC,KAAT,CAAgBC,MAAhB,KAA8B,iBAA9B,CACA,OAASC,UAAT,CAAqBC,IAArB,CAA2BC,KAA3B,CAAkCC,MAAlC,KAAgD,QAAhD,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,KAArB,CACA,OAAQC,UAAR,KAAyB,kBAAzB,C,wFAGA,QAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAwB,CACpB,GAAMC,CAAAA,QAAN,CAAgDD,KAAhD,CAAMC,QAAN,CAAeC,eAAf,CAAgDF,KAAhD,CAAeE,eAAf,CAA+BC,OAA/B,CAAgDH,KAAhD,CAA+BG,OAA/B,CAAuCC,KAAvC,CAAgDJ,KAAhD,CAAuCI,KAAvC,CACA,GAAMC,CAAAA,EAAE,CAAGD,KAAK,CAACE,MAAN,CAAaD,EAAxB,CACA,GAAME,CAAAA,EAAE,CAAGH,KAAK,CAACE,MAAN,CAAaC,EAAxB,CACA,GAAMC,CAAAA,MAAM,CAAGC,YAAY,CAACD,MAA5B,CAEA,GAAOE,CAAAA,gBAAgB,CAAGb,GAAG,CAACc,MAAJ,GAAaC,KAAb,CAAmB,CAC7CC,OAAO,CAAEhB,GAAG,CAACiB,MAAJ,GAAaC,QAAb,CAAsB,kBAAtB,CADoC,CAAnB,CAEzB,CAACV,EAAD,CAFyB,CAA1B,CAKF,GAAMW,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,MAAD,CAAY,CAE/B,GAAMC,CAAAA,YAAY,2CAAsCb,EAAtC,mBAAkDE,EAAlD,KAAlB,CACAY,KAAK,CAACD,YAAD,CAAe,CAClBE,MAAM,CAAE,MADU,CAElBC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeN,MAAf,CAFY,CAGlBO,OAAO,CAAE,CACH,gCAA0BhB,MAA1B,CADG,CAEH,eAAgB,kBAFb,CAHS,CAAf,CAAL,CAOGiB,IAPH,CAOQ,SAAAC,QAAQ,CAAG,CACjB,GAAIA,QAAQ,CAACC,MAAT,GAAkB,GAAtB,CAA2B,CACvB;AACEzB,eAAe,GACpB,CAHD,IAIK,CACH;AACEA,eAAe,GACf0B,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GACF,KAAM,IAAIC,CAAAA,KAAJ,CAAU,sBAAV,CAAN,CACD,CACF,CAlBD,EAkBGN,IAlBH,CAkBQ,SAAAO,IAAI,CAAI,CACd;AAED,CArBD,EAqBGC,KArBH,CAqBS,SAACC,KAAD,CAAW,CAClB;AACAC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACD,CAxBD,EAyBD,CA5BD,CA6BA,mBACE,kCACE,MAAC,KAAD,EAAO,IAAI,CAAEjC,QAAb,CAAuB,MAAM,CAAEC,eAA/B,wBAEE,KAAC,KAAD,CAAO,MAAP,EAAc,WAAW,KAAzB,uBACE,KAAC,KAAD,CAAO,KAAP,yBADF,EAFF,cAME,KAAC,KAAD,CAAO,IAAP,wBACR,KAAC,KAAD,CAAO,QAAP,wBAEU,KAAC,MAAD,EACH,aAAa,CAAE,CAAEW,OAAO,CAAE,EAAX,CADZ,CAEH,QAAQ,CAAEG,YAFP,CAGH,gBAAgB,CAAEN,gBAHf,UAKF,kBAAAV,KAAK,qBACH,MAAC,IAAD,EAAM,SAAS,CAAC,gBAAhB,wBACE,aAAK,SAAS,CAAC,YAAf,wBACE,cAAO,OAAO,CAAC,MAAf,qBADF,cAEE,KAAC,KAAD,EAAO,IAAI,CAAC,MAAZ,CAAmB,IAAI,CAAC,SAAxB,CAAkC,EAAE,CAAE,SAAtC,CAAiD,SAAS,CAAE,eAA5D,CAA6E,WAAW,CAAC,SAAzF,EAFF,CAGIA,KAAK,CAACqC,OAAN,CAAcxB,OAAd,EAAyBb,KAAK,CAACsC,MAAN,CAAazB,OAAtC,eAAiD,aAAM,SAAS,CAAC,wBAAhB,UAA0Cb,KAAK,CAACsC,MAAN,CAAazB,OAAvD,EAHrD,GADF,cAOF,MAAC,KAAD,CAAO,MAAP,yBAEE,KAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,OAAO,CAAEX,eAArC,mBAFF,cAGU,eAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,sBAAhC,qBAHV,GAPE,GADG,EALH,EAFV,EADQ,EANF,GADF,EADF,CA0CD,CAED,cAAeJ,CAAAA,UAAU,CAACC,OAAD,CAAzB","sourcesContent":["import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Modal, Button } from 'react-bootstrap'\nimport { withFormik, Form, Field, Formik } from 'formik';\nimport * as Yup from \"yup\";\nimport {withRouter} from \"react-router-dom\";\n\n\nfunction NewPost(props) {\n    const{openPost,handleClosePost,history,match} = props;\n    const id = match.params.id\n    const pk = match.params.pk\n    const tokens = localStorage.tokens;\n\n    const  validationSchema = Yup.object().shape({\n    message: Yup.string().required('message is wrong'),\n  }, [id])\n\n\n  const handleSubmit = (values) => {\n\n    const REST_API_URL = `http://127.0.0.1:8000/api/board/${id}/topic/${pk}/`;\n    fetch(REST_API_URL, {\n      method: 'post',\n      body: JSON.stringify(values),\n      headers: {\n            'Authorization': `Token ${tokens}`,\n            'Content-Type': 'application/json',\n                }\n    }).then(response=> {\n      if (response.status===201) {\n          // props.history.push('/')\n            handleClosePost()\n      }\n      else {\n        // HANDLE ERROR\n          handleClosePost()\n          window.location.reload();\n        throw new Error('Something went wrong');\n      }\n    }).then(data => {\n      // HANDLE RESPONSE DATA\n\n    }).catch((error) => {\n      // HANDLE ERROR\n      console.log(error);\n    });\n  }\n  return (\n    <div>\n      <Modal show={openPost} onHide={handleClosePost}>\n\n        <Modal.Header closeButton>\n          <Modal.Title> New Post </Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n<React.Fragment>\n\n          <Formik\n       initialValues={{ message: \"\" }}\n       onSubmit={handleSubmit}\n       validationSchema={validationSchema}\n     >\n       {props => (\n          <Form className=\"form-container\">\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">message</label>\n              <Field type=\"text\" name=\"message\" id={\"message\"} className={\"form-control \"} placeholder=\"message\" />\n              { props.touched.message && props.errors.message && <span className=\"help-block text-danger\">{props.errors.message}</span> }\n            </div>\n\n        <Modal.Footer>\n\n          <Button variant=\"secondary\" onClick={handleClosePost}>Close</Button>\n                  <button type=\"submit\" className=\"btn btn-primary mb-2\">Create </button>\n\n        </Modal.Footer>\n          </Form>)}\n             </Formik>\n\n    </React.Fragment>\n\n        </Modal.Body>\n\n\n      </Modal>\n\n    </div>\n  );\n}\n\nexport default withRouter(NewPost);"]},"metadata":{},"sourceType":"module"}