{"ast":null,"code":"var setHeaders = function setHeaders(req, headers) {\n  if (headers) {\n    Object.keys(headers).forEach(function (name) {\n      if (headers[name] !== undefined) {\n        req.setRequestHeader(name, headers[name]);\n      }\n    });\n  }\n};\n\nvar request = function request(url, data) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var req = new XMLHttpRequest();\n  var pXhr = new Promise(function (resolve, reject) {\n    req.onerror = function () {\n      return reject(req);\n    };\n\n    req.ontimeout = function () {\n      return reject(req);\n    };\n\n    req.onabort = function () {\n      return reject(req);\n    };\n\n    req.onload = function () {\n      return resolve(req);\n    };\n\n    req.open(options.method || \"GET\", url);\n    setHeaders(req, options.headers);\n    req.withCredentials = !!options.withCredentials;\n\n    if (options.preSend) {\n      options.preSend(req);\n    }\n\n    req.send(data);\n  }); // $FlowFixMe - adding xhr to Promise\n\n  pXhr.xhr = req;\n  return pXhr;\n};\n\nexport default request;","map":{"version":3,"sources":["/home/user/Desktop/react_board/boards/boards-ui/node_modules/@rpldy/shared/lib/esm/request/request.js"],"names":["setHeaders","req","headers","Object","keys","forEach","name","undefined","setRequestHeader","request","url","data","options","XMLHttpRequest","pXhr","Promise","resolve","reject","onerror","ontimeout","onabort","onload","open","method","withCredentials","preSend","send","xhr"],"mappings":"AAAA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAMC,OAAN,EAAkB;AACnC,MAAIA,OAAJ,EAAa;AACXC,IAAAA,MAAM,CAACC,IAAP,CAAYF,OAAZ,EAAqBG,OAArB,CAA6B,UAAAC,IAAI,EAAI;AACnC,UAAIJ,OAAO,CAACI,IAAD,CAAP,KAAkBC,SAAtB,EAAiC;AAC/BN,QAAAA,GAAG,CAACO,gBAAJ,CAAqBF,IAArB,EAA2BJ,OAAO,CAACI,IAAD,CAAlC;AACD;AACF,KAJD;AAKD;AACF,CARD;;AAUA,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD,EAAMC,IAAN,EAA6B;AAAA,MAAjBC,OAAiB,uEAAP,EAAO;AAC3C,MAAMX,GAAG,GAAG,IAAIY,cAAJ,EAAZ;AACA,MAAMC,IAAI,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC5ChB,IAAAA,GAAG,CAACiB,OAAJ,GAAc;AAAA,aAAMD,MAAM,CAAChB,GAAD,CAAZ;AAAA,KAAd;;AAEAA,IAAAA,GAAG,CAACkB,SAAJ,GAAgB;AAAA,aAAMF,MAAM,CAAChB,GAAD,CAAZ;AAAA,KAAhB;;AAEAA,IAAAA,GAAG,CAACmB,OAAJ,GAAc;AAAA,aAAMH,MAAM,CAAChB,GAAD,CAAZ;AAAA,KAAd;;AAEAA,IAAAA,GAAG,CAACoB,MAAJ,GAAa;AAAA,aAAML,OAAO,CAACf,GAAD,CAAb;AAAA,KAAb;;AAEAA,IAAAA,GAAG,CAACqB,IAAJ,CAASV,OAAO,CAACW,MAAR,IAAkB,KAA3B,EAAkCb,GAAlC;AACAV,IAAAA,UAAU,CAACC,GAAD,EAAMW,OAAO,CAACV,OAAd,CAAV;AACAD,IAAAA,GAAG,CAACuB,eAAJ,GAAsB,CAAC,CAACZ,OAAO,CAACY,eAAhC;;AAEA,QAAIZ,OAAO,CAACa,OAAZ,EAAqB;AACnBb,MAAAA,OAAO,CAACa,OAAR,CAAgBxB,GAAhB;AACD;;AAEDA,IAAAA,GAAG,CAACyB,IAAJ,CAASf,IAAT;AACD,GAlBY,CAAb,CAF2C,CAoBvC;;AAEJG,EAAAA,IAAI,CAACa,GAAL,GAAW1B,GAAX;AACA,SAAOa,IAAP;AACD,CAxBD;;AA0BA,eAAeL,OAAf","sourcesContent":["const setHeaders = (req, headers) => {\n  if (headers) {\n    Object.keys(headers).forEach(name => {\n      if (headers[name] !== undefined) {\n        req.setRequestHeader(name, headers[name]);\n      }\n    });\n  }\n};\n\nconst request = (url, data, options = {}) => {\n  const req = new XMLHttpRequest();\n  const pXhr = new Promise((resolve, reject) => {\n    req.onerror = () => reject(req);\n\n    req.ontimeout = () => reject(req);\n\n    req.onabort = () => reject(req);\n\n    req.onload = () => resolve(req);\n\n    req.open(options.method || \"GET\", url);\n    setHeaders(req, options.headers);\n    req.withCredentials = !!options.withCredentials;\n\n    if (options.preSend) {\n      options.preSend(req);\n    }\n\n    req.send(data);\n  }); // $FlowFixMe - adding xhr to Promise\n\n  pXhr.xhr = req;\n  return pXhr;\n};\n\nexport default request;"]},"metadata":{},"sourceType":"module"}