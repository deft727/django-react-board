{"ast":null,"code":"import _classCallCheck from\"/home/user/Desktop/react_board/boards/boards-ui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/user/Desktop/react_board/boards/boards-ui/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/user/Desktop/react_board/boards/boards-ui/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/user/Desktop/react_board/boards/boards-ui/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/user/Desktop/react_board/boards/boards-ui/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import CustomersService from'./CustomersService';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var customersService=new CustomersService();var CustomerCreateUpdate=/*#__PURE__*/function(_Component){_inherits(CustomerCreateUpdate,_Component);var _super=_createSuper(CustomerCreateUpdate);function CustomerCreateUpdate(props){var _this;_classCallCheck(this,CustomerCreateUpdate);_this=_super.call(this,props);_this.handleSubmit=_this.handleSubmit.bind(_assertThisInitialized(_this));return _this;}_createClass(CustomerCreateUpdate,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var params=this.props.match.params;if(params&&params.pk){customersService.getCustomer(params.pk).then(function(c){_this2.refs.username.value=c.username;_this2.refs.email.value=c.email;});}}},{key:\"handleCreate\",value:function handleCreate(){customersService.createCustomer({\"username\":this.refs.username.value,\"email\":this.refs.email.value}).then(function(result){alert(\"Customer created!\");}).catch(function(){alert('There was an error! Please re-check your form.');});}},{key:\"handleUpdate\",value:function handleUpdate(pk){customersService.updateCustomer({\"pk\":pk,\"username\":this.refs.username.value,\"email\":this.refs.email.value}).then(function(result){console.log(result);alert(\"Customer updated!\");}).catch(function(){alert('There was an error! Please re-check your form.');});}},{key:\"handleSubmit\",value:function handleSubmit(event){var params=this.props.match.params;if(params&&params.pk){this.handleUpdate(params.pk);}else{this.handleCreate();}event.preventDefault();}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"form\",{onSubmit:this.handleSubmit,children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Username:\"}),/*#__PURE__*/_jsx(\"input\",{className:\"form-control\",type:\"text\",ref:\"firstName\"}),/*#__PURE__*/_jsx(\"label\",{children:\"Email:\"}),/*#__PURE__*/_jsx(\"input\",{className:\"form-control\",type:\"text\",ref:\"email\"}),/*#__PURE__*/_jsx(\"input\",{className:\"btn btn-primary\",type:\"submit\",value:\"Submit\"})]})});}}]);return CustomerCreateUpdate;}(Component);export default CustomerCreateUpdate;","map":{"version":3,"sources":["/home/user/Desktop/react_board/boards/boards-ui/src/components/customers/CustomerCreateUpdate.js"],"names":["React","Component","CustomersService","customersService","CustomerCreateUpdate","props","handleSubmit","bind","params","match","pk","getCustomer","then","c","refs","username","value","email","createCustomer","result","alert","catch","updateCustomer","console","log","event","handleUpdate","handleCreate","preventDefault"],"mappings":"0oBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,C,wFAEA,GAAMC,CAAAA,gBAAgB,CAAG,GAAID,CAAAA,gBAAJ,EAAzB,C,GAEME,CAAAA,oB,4HACF,8BAAYC,KAAZ,CAAmB,sDACf,uBAAMA,KAAN,EAEA,MAAKC,YAAL,CAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB,CAHe,aAIhB,C,kEAED,4BAAmB,iBACjB,GAAiBC,CAAAA,MAAjB,CAA8B,KAAKH,KAAnC,CAAQI,KAAR,CAAiBD,MAAjB,CACA,GAAGA,MAAM,EAAIA,MAAM,CAACE,EAApB,CACA,CACEP,gBAAgB,CAACQ,WAAjB,CAA6BH,MAAM,CAACE,EAApC,EAAwCE,IAAxC,CAA6C,SAACC,CAAD,CAAK,CAChD,MAAI,CAACC,IAAL,CAAUC,QAAV,CAAmBC,KAAnB,CAA2BH,CAAC,CAACE,QAA7B,CACA,MAAI,CAACD,IAAL,CAAUG,KAAV,CAAgBD,KAAhB,CAAwBH,CAAC,CAACI,KAA1B,CACD,CAHD,EAID,CACF,C,4BAED,uBAAc,CACZd,gBAAgB,CAACe,cAAjB,CACE,CACE,WAAY,KAAKJ,IAAL,CAAUC,QAAV,CAAmBC,KADjC,CAEE,QAAS,KAAKF,IAAL,CAAUG,KAAV,CAAgBD,KAF3B,CADF,EAKEJ,IALF,CAKO,SAACO,MAAD,CAAU,CACfC,KAAK,CAAC,mBAAD,CAAL,CACD,CAPD,EAOGC,KAPH,CAOS,UAAI,CACXD,KAAK,CAAC,gDAAD,CAAL,CACD,CATD,EAUD,C,4BACD,sBAAaV,EAAb,CAAgB,CACdP,gBAAgB,CAACmB,cAAjB,CACE,CACE,KAAMZ,EADR,CAEE,WAAY,KAAKI,IAAL,CAAUC,QAAV,CAAmBC,KAFjC,CAGE,QAAS,KAAKF,IAAL,CAAUG,KAAV,CAAgBD,KAH3B,CADF,EAMEJ,IANF,CAMO,SAACO,MAAD,CAAU,CACfI,OAAO,CAACC,GAAR,CAAYL,MAAZ,EACAC,KAAK,CAAC,mBAAD,CAAL,CACD,CATD,EASGC,KATH,CASS,UAAI,CACXD,KAAK,CAAC,gDAAD,CAAL,CACD,CAXD,EAYD,C,4BACD,sBAAaK,KAAb,CAAoB,CAClB,GAAiBjB,CAAAA,MAAjB,CAA8B,KAAKH,KAAnC,CAAQI,KAAR,CAAiBD,MAAjB,CAEA,GAAGA,MAAM,EAAIA,MAAM,CAACE,EAApB,CAAuB,CACrB,KAAKgB,YAAL,CAAkBlB,MAAM,CAACE,EAAzB,EACD,CAFD,IAIA,CACE,KAAKiB,YAAL,GACD,CAEDF,KAAK,CAACG,cAAN,GACD,C,sBAED,iBAAS,CACP,mBACE,aAAM,QAAQ,CAAE,KAAKtB,YAArB,uBACA,aAAK,SAAS,CAAC,YAAf,wBACE,oCADF,cAGI,cAAO,SAAS,CAAC,cAAjB,CAAgC,IAAI,CAAC,MAArC,CAA4C,GAAG,CAAC,WAAhD,EAHJ,cAKE,iCALF,cAOI,cAAO,SAAS,CAAC,cAAjB,CAAgC,IAAI,CAAC,MAArC,CAA4C,GAAG,CAAC,OAAhD,EAPJ,cASE,cAAO,SAAS,CAAC,iBAAjB,CAAmC,IAAI,CAAC,QAAxC,CAAiD,KAAK,CAAC,QAAvD,EATF,GADA,EADF,CAeD,C,kCA1E4BL,S,EA6EnC,cAAeG,CAAAA,oBAAf","sourcesContent":["import React, { Component } from 'react';\nimport CustomersService from './CustomersService';\n\nconst customersService = new CustomersService();\n\nclass CustomerCreateUpdate extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n\n      componentDidMount(){\n        const { match: { params } } = this.props;\n        if(params && params.pk)\n        {\n          customersService.getCustomer(params.pk).then((c)=>{\n            this.refs.username.value = c.username;\n            this.refs.email.value = c.email;\n          })\n        }\n      }\n\n      handleCreate(){\n        customersService.createCustomer(\n          {\n            \"username\": this.refs.username.value,\n            \"email\": this.refs.email.value,\n        }\n        ).then((result)=>{\n          alert(\"Customer created!\");\n        }).catch(()=>{\n          alert('There was an error! Please re-check your form.');\n        });\n      }\n      handleUpdate(pk){\n        customersService.updateCustomer(\n          {\n            \"pk\": pk,\n            \"username\": this.refs.username.value,\n            \"email\": this.refs.email.value,\n        }\n        ).then((result)=>{\n          console.log(result);\n          alert(\"Customer updated!\");\n        }).catch(()=>{\n          alert('There was an error! Please re-check your form.');\n        });\n      }\n      handleSubmit(event) {\n        const { match: { params } } = this.props;\n\n        if(params && params.pk){\n          this.handleUpdate(params.pk);\n        }\n        else\n        {\n          this.handleCreate();\n        }\n\n        event.preventDefault();\n      }\n\n      render() {\n        return (\n          <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <label>\n              Username:</label>\n              <input className=\"form-control\" type=\"text\" ref='firstName' />\n\n            <label>\n              Email:</label>\n              <input className=\"form-control\" type=\"text\" ref='email' />\n\n            <input className=\"btn btn-primary\" type=\"submit\" value=\"Submit\" />\n            </div>\n          </form>\n        );\n      }\n}\n\nexport default CustomerCreateUpdate;"]},"metadata":{},"sourceType":"module"}