{"version":3,"sources":["components/Modal/modal.js","components/BoardForm/boardform.js","components/InfoModal/infomodal.js","components/table/Table.js","components/Thumb/thumb.js","components/NewTopic/newtopic.js","components/board_detail/BoardDetail.js","components/navbar/navbar.js","components/NewPost/newpost.js","components/topic_detail/Topic.js","components/footer/footer.js","components/customers/CustomersService.js","components/customers/CustomersList.js","components/customers/CustomerCreateUpdate.js","components/InfoPages/infopages.js","components/auth/signUpform.js","components/auth/registerForm.js","components/account/my_account.js","App.js","reportWebVitals.js","index.js"],"names":["MyModal","open","handleClose","boarD","tokens","props","localStorage","validationSchema","Yup","shape","name","required","description","Modal","show","onHide","Header","closeButton","Title","Body","Fragment","initialValues","onSubmit","values","REST_API_URL","id","fetch","method","body","JSON","stringify","headers","then","response","ok","json","Error","data","window","location","reload","catch","error","console","log","enableReinitialize","className","htmlFor","type","placeholder","touched","errors","Footer","Button","variant","onClick","BoardForm","handleCloseBoard","Name","Description","crud","InfoModal","openInfo","handleCloseInfo","myhistory","scope","map","h","history_type","history_date","Table","useState","currentBoard","setCurrentBoard","setShow","showBoard","setShowBoard","showInfo","setShowInfo","setHistory","boards","SetBoards","useEffect","axios","Cookies","get","url","results","history","b","to","pathname","froDashboard","topics_count","posts_count","last_post","message","href","author","bordId","pk","status","Thumb","state","loading","thumb","undefined","nextProps","file","this","setState","reader","FileReader","onloadend","result","readAsDataURL","src","alt","height","width","React","Component","require","withRouter","openTopic","handleCloseTopic","match","params","subject","dropzoneStyle","borderWidth","borderColor","borderStyle","borderRadius","FormData","append","post","alert","style","accept","onDrop","acceptedFiles","length","setFieldValue","files","concat","isDragActive","isDragReject","rejectedFiles","i","board","Setboard","topics","SetTopic","showTopic","setShowTopic","t","starter","replies","views","last_updated","target","Navbar","Toggle","Collapse","Nav","NavDropdown","title","menuVariant","Item","Divider","removeItem","openPost","handleClosePost","TopicDetail","posts","SetPosts","images","SetImage","showPost","setShowPost","handleShowPost","photos","Carousel","placement","p","created_by","created_at","marginTop","API_URL","CustomersService","link","customer","delete","put","customersService","CustomersList","customers","nextPageURL","nextPage","bind","handleDelete","self","getCustomers","nextlink","e","deleteCustomer","newArr","filter","obj","getCustomersByURL","c","username","email","CustomerCreateUpdate","handleSubmit","getCustomer","refs","value","createCustomer","updateCustomer","event","handleUpdate","handleCreate","preventDefault","ref","InfoPageDetail","infopage","Setinfopage","content","password","margin","maxWidth","background","padding","boxShadow","setItem","auth_token","push","Profile","user","Setuser","App","path","component","LoginFormik","RegisterPage","exact","exect","BoardDetail","NewTopic","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0894616.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Modal, Button } from 'react-bootstrap'\nimport { withFormik, Form, Field, Formik } from 'formik';\nimport * as Yup from \"yup\";\n\n\nfunction MyModal({open,handleClose,boarD,props}) {\n\n    const tokens = localStorage.tokens;\n    const  validationSchema = Yup.object().shape({\n    name: Yup.string().required('name is wrong'),\n    description: Yup.string().required('Description is wrong')\n  })\n\n\n  const handleSubmit = (values) => {\n    const REST_API_URL = `http://127.0.0.1:8000/api/board/${boarD.id}/`;\n    fetch(REST_API_URL, {\n      method: 'put',\n      body: JSON.stringify(values),\n      headers: {\n          'Authorization': `Token ${tokens}`,\n           'Content-Type': 'application/json',\n                }\n    }).then(response=> {\n      if (response.ok) {\n        return response.json();\n      } else {\n        // HANDLE ERROR\n        throw new Error('Something went wrong');\n      }\n    }).then(data => {\n      // HANDLE RESPONSE DATA\n      window.location.reload();\n\n    }).catch((error) => {\n      // HANDLE ERROR\n      console.log(error);\n    });\n  }\n  return (\n    <div>\n      <Modal show={open} onHide={handleClose}>\n\n        <Modal.Header closeButton>\n          <Modal.Title> Edit '{boarD.name}'</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n<React.Fragment>\n\n          <Formik\n       initialValues={{ name: boarD.name, description: boarD.description }}\n       onSubmit={handleSubmit}\n       validationSchema={validationSchema}\n       enableReinitialize\n     >\n       {props => (\n          <Form className=\"form-container\">\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">name</label>\n              <Field type=\"text\" name=\"name\" id={\"name\"} className={\"form-control \"} placeholder=\"Name\" />\n              { props.touched.name && props.errors.name && <span className=\"help-block text-danger\">{props.errors.name}</span> }\n            </div>\n              <div className=\"form-group\">\n              <label htmlFor=\"description\">Description</label>\n              <Field type=\"text\" name=\"description\" id={\"description\"} className={\"form-control\"} placeholder=\"Description\" />\n              { props.touched.description && props.errors.description && <span className=\"help-block text-danger\">{props.errors.description}</span> }\n            </div>\n        <Modal.Footer>\n\n          <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\n                  <button type=\"submit\" className=\"btn btn-primary mb-2\">submit </button>\n\n        </Modal.Footer>\n          </Form>)}\n             </Formik>\n\n    </React.Fragment>\n\n        </Modal.Body>\n\n\n      </Modal>\n\n    </div>\n  );\n}\n\nexport default MyModal;","import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Modal, Button } from 'react-bootstrap'\nimport { withFormik, Form, Field, Formik } from 'formik';\nimport * as Yup from \"yup\";\n\nfunction BoardForm({open,handleCloseBoard,props}){\n    const tokens = localStorage.tokens;\n\n  const  validationSchema = Yup.object().shape({\n    name: Yup.string().required('name is wrong'),\n    description: Yup.string().required('Description is wrong')\n  })\n\n\n  const boardSubmit = (values) => {\n    const REST_API_URL = `http://127.0.0.1:8000/api/board/`;\n    fetch(REST_API_URL, {\n      method: 'post',\n      body: JSON.stringify(values),\n      headers: {\n          'Authorization': `Token ${tokens}`,\n           'Content-Type': 'application/json',\n                }\n    }).then(response=> {\n      if (response.ok) {\n        return response.json();\n      } else {\n        // HANDLE ERROR\n        throw new Error('Something went wrong');\n      }\n    }).then(data => {\n      // HANDLE RESPONSE DATA\n      window.location.reload();\n      // props.history.push(\"/\")\n\n    }).catch((error) => {\n      // HANDLE ERROR\n      console.log(error);\n    });\n  }\n  return (\n    <div>\n      <Modal show={open} onHide={handleCloseBoard}>\n\n        <Modal.Header closeButton>\n          <Modal.Title> New Board</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n<React.Fragment>\n\n          <Formik\n       initialValues={{ Name: '', Description: \"\" }}\n       onSubmit={boardSubmit}\n       validationSchema={validationSchema}\n     >\n       {props => (\n          <Form className=\"form-container\">\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">name</label>\n              <Field type=\"text\" name=\"name\" id={\"name\"} className={\"form-control \"} placeholder=\"Name\" />\n              { props.touched.name && props.errors.name && <span className=\"help-block text-danger\">{props.errors.name}</span> }\n            </div>\n              <div className=\"form-group\">\n              <label htmlFor=\"description\">Description</label>\n              <Field type=\"text\" name=\"description\" id={\"description\"} className={\"form-control\"} placeholder=\"Description\" />\n              { props.touched.description && props.errors.description && <span className=\"help-block text-danger\">{props.errors.description}</span> }\n            </div>\n        <Modal.Footer>\n\n          <Button variant=\"secondary\" onClick={handleCloseBoard}>Close</Button>\n                  <button type=\"submit\" className=\"btn btn-primary mb-2\">Create</button>\n\n        </Modal.Footer>\n          </Form>)}\n             </Formik>\n\n    </React.Fragment>\n\n        </Modal.Body>\n\n\n\n      </Modal>\n\n    </div>\n  );\n}\n\nexport default BoardForm;","import {Button, Modal} from \"react-bootstrap\";\nimport React from \"react\";\nimport BoardForm from \"../BoardForm/boardform\";\n\nlet crud = {\n    \"-\": \"Delete\",\n    \"+\": \"Create\",\n    \"~\": \"Update\"\n}\n\nfunction InfoModal({openInfo,handleCloseInfo,myhistory,props}) {\nconst tokens = localStorage.tokens;\n\n// console.log(myhistory)\n\n  return (\n    <div>\n      <Modal show={openInfo} onHide={handleCloseInfo}>\n        <Modal.Header closeButton>\n          <Modal.Title> Last changes </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <table className=\"table\">\n                <thead className=\"thead-dark\">\n                <tr>\n                    <th scope=\"col\">Object</th>\n                    <th scope=\"col\">Changes</th>\n                    <th scope=\"col\">Time</th>\n                </tr>\n                </thead>\n\n                {\n                    myhistory.map(h => (\n                <tbody key={h.id}>\n                <tr>\n                    <td> {h.name}</td>\n                    <td> {crud[h.history_type]}</td>\n                    <td> {h.history_date}</td>\n                </tr>\n                </tbody>\n                      ))}\n            </table>\n<React.Fragment>\n\n\n        <Modal.Footer>\n\n          <Button variant=\"secondary\" onClick={handleCloseInfo}>Close</Button>\n\n\n        </Modal.Footer>\n\n\n    </React.Fragment>\n        </Modal.Body>\n\n\n\n      </Modal>\n\n    </div>\n  );\n}\n\nexport default InfoModal;","import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Link} from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport axios from 'axios';\nimport Cookies from 'js-cookie'\nimport ReactDOM from 'react-dom';\nimport { Button } from 'react-bootstrap';\nimport MyModal from \"../Modal/modal\";\nimport BoardForm from \"../BoardForm/boardform\";\nimport InfoModal from \"../InfoModal/infomodal\";\n\n\n\nfunction deleteboard(val) {\n}\nfunction Table(props) {\n  const [currentBoard, setCurrentBoard]  = useState(null);\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow =(bordId) =>{\n      console.log(bordId);\n      setShow(true);\n      setCurrentBoard(bordId);\n  }\nconst tokens = localStorage.tokens;\n\n\n  const [showBoard, setShowBoard] = useState(false);\n  const handleCloseBoard = () => setShowBoard(false);\n  const handleShowBoard =() =>{\n      setShowBoard(true);\n  }\n\n  const [showInfo, setShowInfo] = useState(false);\n  const handleCloseInfo = () => setShowInfo(false);\n  const handleShowInfo =() =>{\n      setShowInfo(true);\n  }\n\nconst [myhistory, setHistory] = useState([])\nconst [boards, SetBoards] = useState([])\n     useEffect(() => {\n            // let tokens = window.localStorage.getItem('tokens');\n            // console.log('tokens', Cookies.get('csrftoken') )\n            axios({\n                method: \"GET\",\n                headers: {\n                    'Authorization': `Token ${tokens}`,\n                    'Accept' : 'application/json',\n                    'Content-Type': 'application/json',\n                    'csrftoken': Cookies.get('csrftoken'),\n                },\n                url: `http://127.0.0.1:8000/api/board/`\n            }).then(response => {\n                SetBoards(response.data.results);\n                setHistory(response.data.history)\n            })\n        }, []);\n\n            // console.log(history)\n\n    const deleteboard = (pk) => {\n        axios({\n            method: \"delete\",\n            headers: {\n                'Authorization': `Token ${tokens}`,\n                'Accept': 'application/json',\n            },\n            url: `http://127.0.0.1:8000/api/board/${pk}/`\n        }).then((response)=> {\n            // console.log(response)\n            if (response.status === 204) {\n             window.location.reload();\n                // props.history.push(\"/\")\n            }\n    } )}\n\n        return (\n            <div className=\"App mt-5\">\n           {\n             !tokens ? null : ( <>\n<div className=\"d-flex p-2\">\n  <Button variant=\"success\" onClick={()=>handleShowBoard()}>New Board</Button> &nbsp;\n\n  <Button variant=\"secondary\" onClick={()=>handleShowInfo(myhistory)}> Last info </Button>\n\n  {showBoard && <BoardForm open={showBoard}  handleCloseBoard={handleCloseBoard}/>}\n  {showInfo && <InfoModal openInfo={showInfo}  handleCloseInfo={handleCloseInfo} myhistory={myhistory}/>}\n\n  </div>\n             </>)\n                 }\n                <table className=\"table table-bordered m-1\">\n                    <thead>\n                    <tr>\n                        <th scope=\"col\">Board</th>\n                        <th scope=\"col\">Topics</th>\n                        <th scope=\"col\">Posts</th>\n                        <th scope=\"col\">Last Post</th>\n                        { !tokens ? null : (\n                        <th scope=\"col\">Edit</th>   )}\n                    </tr>\n                    </thead>\n                    {boards.map(b => (\n                        <tbody key={b.id}>\n                        <tr>\n                            <td>\n                                <small className=\"text-muted d-block\">\n\n                          <Link className=\"link-success\" to={{pathname:`/board/${b.id}/`, froDashboard:false }}>{b.name}</Link>\n\n                                </small>\n                            </td>\n                            <td className=\"align-middle\">\n                                {b.topics_count}\n                            </td>\n                            <td className=\"align-middle\">\n                                {b.posts_count}\n                            </td>\n\n                            <td className=\"align-middle\">\n\n                                <small>\n                                    {b.last_post.message} <br/>\n                                    <a href=\"\">\n                                        By {b.last_post.author}\n                                    </a>\n                                </small>\n                            </td>\n    { !tokens ? null : (\n                            <td>\n      <Button variant=\"primary\" onClick={()=>handleShow(b)} >\n        Edit\n      </Button> &nbsp; &nbsp;\n       <Link  type=\"button\" onClick={() => deleteboard(`${b.id}`)}  className=\"btn btn-danger\">Delete</Link>\n                            </td>     )}\n\n                        </tr>\n                        </tbody>\n                    ))}\n                </table>\n                {show && <MyModal open={show} boarD={currentBoard} handleClose={handleClose}/>}\n            </div>\n        );\n}\n\n\nexport default Table;\n","import React from \"react\";\n\nexport default class Thumb extends React.Component {\n  state = {\n    loading: false,\n    thumb: undefined,\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (!nextProps.file) { return; }\n\n    this.setState({ loading: true }, () => {\n      let reader = new FileReader();\n\n      reader.onloadend = () => {\n        this.setState({ loading: false, thumb: reader.result });\n      };\n\n      reader.readAsDataURL(nextProps.file);\n    });\n  }\n\n  render() {\n    const { file } = this.props;\n    const { loading, thumb } = this.state;\n\n    if (!file) { return null; }\n\n    if (loading) { return <p>loading...</p>; }\n\n    return (<img src={thumb}\n      alt={file.name}\n      className=\"img-thumbnail mt-2\"\n      height={200}\n      width={200} />);\n  }\n}","import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Modal, Button } from 'react-bootstrap'\nimport { withFormik, Form, Field, Formik } from 'formik';\nimport * as Yup from \"yup\";\nimport {withRouter} from \"react-router-dom\";\nimport FormData from 'form-data';\nimport yup from \"yup\";\nimport Dropzone from \"react-dropzone\";\nimport Thumb from \"../Thumb/thumb\";\n\n\nconst axios = require('axios');\n\nfunction NewTopic(props) {\n    const{openTopic,handleCloseTopic,history,match} = props;\n    const id = match.params.id\n    const tokens = localStorage.tokens;\n    const  validationSchema = Yup.object().shape({\n    subject: Yup.string().required('subject is wrong'),\n  }, [id])\n\nconst dropzoneStyle = {\n  width: \"100%\",\n  height: \"auto\",\n  borderWidth: 2,\n  borderColor: \"rgb(102, 102, 102)\",\n  borderStyle: \"dashed\",\n  borderRadius: 5,\n}\n  const handleSubmit = (values) => {\n    let data = new FormData();\n     data.append('file', values.file, values.file.name,);\n     data.append('subject', values.subject);\n    // console.log(\"data\", data)\n    console.log(\"values\", values.file.name)\n    const REST_API_URL = `http://127.0.0.1:8000/api/board/${id}/new/`;\n    axios.post(REST_API_URL, data, {\n  headers: {\n    'accept': 'application/json',\n    'Accept-Language': 'en-US,en;q=0.8',\n    'Content-Type': `multipart/form-data`,\n    'Authorization': `Token ${tokens}`,\n  }\n})\n  .then((response) => {\n      if (response.status===201) {\n          alert(\"Success\");\n            handleCloseTopic()\n      }\n      else {\n          alert(\"error\");\n          handleCloseTopic()\n          // window.location.reload();\n        throw new Error('Something went wrong');\n      }\n  });\n  }\n  return (\n    <div>\n      <Modal show={openTopic} onHide={handleCloseTopic}>\n\n        <Modal.Header closeButton>\n          <Modal.Title> New Topic </Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n<React.Fragment>\n\n          <Formik\n       initialValues={{ subject: \"\" }}\n       onSubmit={handleSubmit}\n       validationSchema={validationSchema}\n     >\n       {props => (\n          <Form className=\"form-container\">\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">subject</label>\n              <Field type=\"text\" name=\"subject\" id={\"subject\"} className={\"form-control \"} placeholder=\"subject\" />\n              { props.touched.subject && props.errors.subject && <span className=\"help-block text-danger\">{props.errors.subject}</span> }\n\n            {/*   <input*/}\n            {/*  multiple={true}*/}\n            {/*  type=\"file\"*/}\n            {/*  name=\"file\"*/}\n            {/*  onChange={(event) =>{*/}\n            {/*    props.setFieldValue(\"file\", event.target.files[0]);*/}\n            {/*  }}*/}\n            {/*/>*/}\n <Dropzone style={dropzoneStyle} accept=\"image/*\" onDrop={(acceptedFiles) => {\n              // do nothing if no files\n              if (acceptedFiles.length === 0) { return; }\n\n              // on drop we add to the existing files\n              props.setFieldValue(\"files\", props.files.concat(acceptedFiles));\n            }}>\n              {({ isDragActive, isDragReject, acceptedFiles, rejectedFiles }) => {\n                if (isDragActive) {\n                  return \"This file is authorized\";\n                }\n\n                if (isDragReject) {\n                  return \"This file is not authorized\";\n                }\n\n                if (props.files.length === 0) {\n                  return <p>Try dragging a file here!</p>\n                }\n\n                return props.files.map((file, i) => (<Thumb key={i} file={file} />));\n              }}\n            </Dropzone>\n\n            </div>\n\n        <Modal.Footer>\n\n          <Button variant=\"secondary\" onClick={handleCloseTopic}>Close</Button>\n                  <button type=\"submit\" className=\"btn btn-primary mb-2\">Create </button>\n\n        </Modal.Footer>\n          </Form>)}\n             </Formik>\n\n    </React.Fragment>\n\n        </Modal.Body>\n\n\n      </Modal>\n\n    </div>\n  );\n}\n\nexport default withRouter(NewTopic);","import React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport {Link, withRouter} from \"react-router-dom\";\nimport {Button} from \"react-bootstrap\";\nimport InfoModal from \"../InfoModal/infomodal\";\nimport NewTopic from \"../NewTopic/newtopic\";\n\nfunction BoardDetail({ match }) {\n\n    const [board, Setboard] = useState({})\n    const [topics, SetTopic] = useState([])\n    const id = match.params.id\n    const tokens = localStorage.tokens;\n\n    const [showTopic, setShowTopic] = useState(false);\n    const handleCloseTopic = () => setShowTopic(false);\n    const handleShowTopic =() =>{\n      setShowTopic(true);}\n\n\n// console.log(match)\n    useEffect(() => {\n\n        axios({\n            method: \"GET\",\n            headers: {\n                'Authorization': `Token ${tokens}`,\n                'Accept' : 'application/json',\n                'Content-Type': 'application/json'\n                },\n            url: `http://127.0.0.1:8000/api/board/${id}/`\n        }).then(response => {\n            Setboard(response.data)\n            SetTopic(response.data.topics)\n        })\n    }, [id, showTopic])\n\n    return(\n\n<div className=\"App mt-5\">\n {\n                          !tokens ? null : ( <>\n              <Button variant=\"success \" className=\"d-flex m-1 ml-2\" onClick={()=>handleShowTopic()} >New Topic</Button>\n  {showTopic && <NewTopic openTopic={showTopic}  handleCloseTopic={handleCloseTopic} />}\n  </>)\n                        }\n {topics.length ?\n\n     <table className=\"table table-bordered m-1\">\n\n        <thead>\n        <tr>\n      <th scope=\"col\">Topic</th>\n      <th scope=\"col\">Starter</th>\n      <th scope=\"col\">Replies</th>\n      <th scope=\"col\">Views</th>\n      <th scope=\"col\">Last Update</th>\n        </tr>\n        </thead>\n       {topics.map(t => (\n        <tbody className=\"infinite-item\" key={t.id}>\n        <tr>\n          <td>\n              <small className=\"text-muted d-block\">\n {\n   !tokens ? null : (\n<Link className=\"link-success\" to={{pathname:`/board/${board.id}/topic/${t.id}/` }}>{t.subject}</Link>\n   )}\n              </small>\n          </td>\n          <td className=\"align-middle\">\n            {t.starter}\n          </td>\n          <td className=\"align-middle\">\n            {t.replies}\n          </td>\n          <td className=\"align-middle\">\n               {t.views}\n              </td>\n          <td className=\"align-middle\">\n           {t.last_updated}\n          </td>\n        </tr>\n        </tbody>\n           ))}\n      </table>\n     : <p className=\"text-center fs-3\">Content doesnt exist, create new topic</p>\n }\n</div>\n\n    )\n}\n\nexport default withRouter(BoardDetail);","import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Link} from 'react-router-dom';\n// // import Dropdown from 'react-overlays/Dropdown'\n// import DropdownButton from 'react-bootstrap/DropdownButton'\n// import Dropdown from 'react-bootstrap/Dropdown'\nimport NavDropdown from 'react-bootstrap/NavDropdown'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from \"react-bootstrap/Navbar\";\nimport {withRouter} from \"react-router-dom\";\n\nimport axios from 'axios';\n                // <Link className=\"navbar-brand\" to={{pathname:`/api/account/`, froDashboard:false }}>Django Boards</Link>\n\nfunction MyNavbar(props) {\n    const [user, Setuser] = useState({})\n    const tokens = localStorage.tokens;\n    const logout = ()=>{ axios({\n            method: \"post\",\n            headers: {\n                'Authorization': `Token ${tokens}`,\n                'Accept' : 'application/json',\n                'Content-Type': 'application/json'\n                },\n            url: `http://127.0.0.1:8000/auth/token/logout/`\n        }).then((response)=> {\n            // console.log(response)\n            if (response.status === 204) {\n            window.localStorage.removeItem(\"tokens\");\n            window.location.reload();\n             //    props.history.push(\"/auth/token/login/\")\n            }\n    } )}\n\n\n  return (\n\n    <div className=\"App\">\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <div className=\"container-fluid\">\n                <Link className=\"navbar-brand\" to={{pathname:`/`, froDashboard:false }}>Django Boards</Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\n                        data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"> </span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav ms-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n  <a href=\"http://127.0.0.1:8000/swagger/\" className=\"nav-link active text-info\" target=\"_blank\">Documents</a>\n                        </li>\n                        {\n                          tokens ? null : ( <>\n                        <li className=\"nav-item\">\n\n         <Link  className=\"nav-link active\" aria-current=\"page\" to={{pathname:`/auth/token/login/`, froDashboard:false }}>Login</Link>\n\n                        </li>\n                        <li className=\"nav-item\">\n         <Link  className=\"nav-link active\" aria-current=\"page\" to={{pathname:`/auth/users/`, froDashboard:false }}>Register</Link>\n                        </li>\n                            </>)\n                        }\n                        <li className=\"nav-item dropdown\">\n                            {\n                                !tokens ? null : ( <><Navbar.Toggle aria-controls=\"navbar-dark-example\" />\n    <Navbar.Collapse id=\"navbar-dark-example\">\n      <Nav>\n        <NavDropdown\n          id=\"nav-dropdown-dark-example\"\n          title=\"Profile\"\n          menuVariant=\"dark\"\n        >\n            <Link to={{pathname:`/account/`, froDashboard:false }} >  <NavDropdown.Item href=\"/account/\">My profile</NavDropdown.Item></Link>\n          <NavDropdown.Item href=\"#action/3.2\">Change password</NavDropdown.Item>\n          {/*<NavDropdown.Item href=\"#action/3.3\">Logout</NavDropdown.Item>*/}\n          <NavDropdown.Divider />\n          <NavDropdown.Item onClick={logout}>Logout</NavDropdown.Item>\n        </NavDropdown>\n      </Nav>\n    </Navbar.Collapse></>)\n                            }\n\n                        </li>\n\n                    </ul>\n\n                </div>\n            </div>\n        </nav>\n    </div>\n  )\n}\n\nexport default withRouter(MyNavbar);","import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Modal, Button } from 'react-bootstrap'\nimport { withFormik, Form, Field, Formik } from 'formik';\nimport * as Yup from \"yup\";\nimport {withRouter} from \"react-router-dom\";\n\n\nfunction NewPost(props) {\n    const{openPost,handleClosePost,history,match} = props;\n    const id = match.params.id\n    const pk = match.params.pk\n    const tokens = localStorage.tokens;\n\n    const  validationSchema = Yup.object().shape({\n    message: Yup.string().required('message is wrong'),\n  }, [id,pk])\n\n\n  const handleSubmit = (values) => {\n\n    const REST_API_URL = `http://127.0.0.1:8000/api/board/${id}/topic/${pk}/`;\n    fetch(REST_API_URL, {\n      method: 'post',\n      body: JSON.stringify(values),\n      headers: {\n            'Authorization': `Token ${tokens}`,\n            'Content-Type': 'application/json',\n                }\n    }).then(response=> {\n      if (response.status===201) {\n          // props.history.push('/')\n            handleClosePost()\n      }\n      else {\n        // HANDLE ERROR\n          handleClosePost()\n          window.location.reload();\n        throw new Error('Something went wrong');\n      }\n    }).then(data => {\n      // HANDLE RESPONSE DATA\n\n    }).catch((error) => {\n      // HANDLE ERROR\n      console.log(error);\n    });\n  }\n  return (\n    <div>\n      <Modal show={openPost} onHide={handleClosePost}>\n\n        <Modal.Header closeButton>\n          <Modal.Title> New Post </Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n<React.Fragment>\n\n          <Formik\n       initialValues={{ message: \"\" }}\n       onSubmit={handleSubmit}\n       validationSchema={validationSchema}\n     >\n       {props => (\n          <Form className=\"form-container\">\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">message</label>\n              <Field type=\"text\" name=\"message\" id={\"message\"} className={\"form-control \"} placeholder=\"message\" />\n              { props.touched.message && props.errors.message && <span className=\"help-block text-danger\">{props.errors.message}</span> }\n            </div>\n\n        <Modal.Footer>\n\n          <Button variant=\"secondary\" onClick={handleClosePost}>Close</Button>\n                  <button type=\"submit\" className=\"btn btn-primary mb-2\">Create </button>\n\n        </Modal.Footer>\n          </Form>)}\n             </Formik>\n\n    </React.Fragment>\n\n        </Modal.Body>\n\n\n      </Modal>\n\n    </div>\n  );\n}\n\nexport default withRouter(NewPost);","import React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport {Link} from \"react-router-dom\";\nimport Carousel from 'react-bootstrap/Carousel'\nimport {Button} from \"react-bootstrap\";\nimport NewTopic from \"../NewTopic/newtopic\";\nimport NewPost from \"../NewPost/newpost\";\n\nfunction TopicDetail({ match }) {\n    const tokens = localStorage.tokens;\n    const [topic, SetTopic] = useState({})\n    const [posts, SetPosts] = useState([])\n    const [images, SetImage] = useState([])\n    const id = match.params.id\n    const pk = match.params.pk\n    const [showPost, setShowPost] = useState(false);\n    const handleClosePost = () => setShowPost(false);\n    const handleShowPost =() =>{\n      setShowPost(true);}\n\n\n    useEffect(() => {\n        axios({\n            method: \"GET\",\n            url: `http://127.0.0.1:8000/api/board/${id}/topic/${pk}/`\n        }).then(response => {\n            SetTopic(response.data)\n            SetPosts(response.data.posts)\n            SetImage(response.data.photos)\n        })\n    }, [id,showPost])\n    return(\n\n\n<div className=\"App bordered mt-3 \">\n\n    <div className=\"d-flex justify-content-center\">\n        <div className=\"row\">\n            <div className=\"col-sm\">\n <Carousel>\n   {images.map(i => (\n  <Carousel.Item>\n    <img\n\n      className=\"d-block\"\n      src={i.file}\n      alt=\"First slide\"\n    />\n  </Carousel.Item>\n\n       ))}\n</Carousel>\n</div>\n  </div>\n\n</div>\n    <div className=\"container-fluid\">\n\n    <table className=\"table table-bordered m-2\">\n\n               <thead>  {showPost && <NewPost openPost={showPost}   handleClosePost={handleClosePost} />}\n                             {\n     !posts.length  ? <strong>No contents create new <Button variant=\"btn btn-link\" onClick={()=>handleShowPost()}>post</Button>\n     </strong> : ( <>\n    <Button placement=\"right\" variant=\"btn btn-primary mt-2\"  onClick={()=>handleShowPost()} >New Post</Button>\n\n               <tr >\n                   <th scope=\"col\">User</th>\n                   <th scope=\"col\" >Post</th>\n                   <th scope=\"col\">Time</th>\n               </tr>  </>)\n                        }\n               </thead>\n               {posts.map(p => (\n               <tbody key=\"{p.id}\">\n               <tr>\n                   <th >{p.created_by}</th>\n                   <td >{p.message}</td>\n                   <td>{p.created_at}</td>\n               </tr>\n               </tbody>\n                   ))}\n\n           </table>\n</div>\n</div>\n    )\n}\nexport default TopicDetail;","import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Link , Redirect} from 'react-router-dom';\n\nimport axios from 'axios';\n\nfunction Footer() {\n\n  return (\n\n        <div className=\"footer\" style={{marginTop:'265px'}}>\n            <footer className=\"text-center text-lg-start bg-light text-muted mt-auto\" >\n                <section className=\"\" >\n                    <div className=\"container text-center text-md-start mt-5\">\n\n                        <div className=\"row mt-4 pt-4\">\n\n                            <div className=\"col-md-3 col-lg-4 col-xl-3 mx-auto mb-4\">\n\n                                <h6 className=\"text-uppercase fw-bold mb-4\">\n                                    <i className=\"fas fa-gem me-3\"> </i>Company name\n                                </h6>\n                                <p>\n                                    Here you can use rows and columns to organize your footer content. Lorem ipsum\n                                    dolor sit amet, consectetur adipisicing elit.\n                                </p>\n                            </div>\n\n                            <div className=\"col-md-3 col-lg-2 col-xl-2 mx-auto mb-4\">\n                                <h6 className=\"text-uppercase fw-bold mb-4\">\n                                    Privacy policy\n                                </h6>\n                                <p>\n\n         <Link className=\"text-reset\" to={{pathname:`/pages/1/` }}>Privacy</Link>  /\n         <Link className=\"text-reset\" to={{pathname:`/pages/2/` }}>Terms</Link> /\n         <Link className=\"text-reset\" to={{pathname:`/customer-list/` }}>customers</Link>\n                                </p>\n\n                            </div>\n\n                            <div className=\"col-md-4 col-lg-3 col-xl-3 mx-auto mb-md-0 mb-4\">\n                                <h6 className=\"text-uppercase fw-bold mb-4\">\n                                    Contact\n                                </h6>\n                                <p><i className=\"fas fa-home me-3\"> </i> New York, NY 10012, US</p>\n                                <p>\n                                    <i className=\"fas fa-envelope me-3\"> </i>\n                                    info@example.com\n                                </p>\n                                <p><i className=\"fas fa-phone me-3\"> </i> + 01 234 567 88</p>\n                                <p><i className=\"fas fa-print me-3\"> </i> + 01 234 567 89</p>\n                            </div>\n                        </div>\n                    </div>\n                </section>\n\n                <div className=\"text-center p-4\">\n                    © 2021 Copyright:\n                    <a className=\"text-reset fw-bold\">MDBootstrap.com</a>\n                </div>\n            </footer>\n        </div>\n\n\n  )\n}\n\nexport default Footer;","import axios from 'axios';\nconst API_URL = 'http://127.0.0.1:8000';\n\nexport default class CustomersService{\n\n    constructor(){}\n\n\n    getCustomers() {\n        const url = `${API_URL}/api/customers/`;\n        return axios.get(url).then(response => response.data);\n    }\n    getCustomersByURL(link){\n        const url = `${API_URL}${link}`;\n        return axios.get(url).then(response => response.data);\n    }\n    getCustomer(pk) {\n        const url = `${API_URL}/api/customers/${pk}`;\n        return axios.get(url).then(response => response.data);\n    }\n    deleteCustomer(customer){\n        const url = `${API_URL}/api/customers/${customer.pk}`;\n        return axios.delete(url);\n    }\n    createCustomer(customer){\n        const url = `${API_URL}/api/customers/`;\n        return axios.post(url,customer);\n    }\n    updateCustomer(customer){\n        const url = `${API_URL}/api/customers/${customer.pk}`;\n        return axios.put(url,customer);\n    }\n}","import  React, { Component } from  'react';\nimport  CustomersService  from './CustomersService';\nimport {Link} from \"react-router-dom\";\n\nconst  customersService  =  new  CustomersService();\n\nclass  CustomersList  extends  Component {\n\nconstructor(props) {\n    super(props);\n    this.state  = {\n        customers: [],\n        nextPageURL:  ''\n    };\n    this.nextPage  =  this.nextPage.bind(this);\n    this.handleDelete  =  this.handleDelete.bind(this);\n}\n\ncomponentDidMount() {\n    var  self  =  this;\n    customersService.getCustomers().then(function (result) {\n        console.log(result);\n        self.setState({ customers:  result.data, nextPageURL:  result.nextlink})\n    });\n}\nhandleDelete(e,pk){\n    var  self  =  this;\n    customersService.deleteCustomer({pk :  pk}).then(()=>{\n        var  newArr  =  self.state.customers.filter(function(obj) {\n            return  obj.pk  !==  pk;\n        });\n\n        self.setState({customers:  newArr})\n    });\n}\n\nnextPage(){\n    var  self  =  this;\n    console.log(this.state.nextPageURL);\n    customersService.getCustomersByURL(this.state.nextPageURL).then((result) => {\n        self.setState({ customers:  result.data, nextPageURL:  result.nextlink})\n    });\n}\nrender() {\n\n    return (\n        <div  className=\"customers--list\">\n            <table  className=\"table\">\n            <thead  key=\"thead\">\n            <tr>\n                <th>#</th>\n                <th>username</th>\n                <th>Email</th>\n                <th>Actions</th>\n            </tr>\n            </thead>\n            <tbody>\n            {this.state.customers.map( c  =>\n                <tr  key={c.pk}>\n                <td>{c.pk}  </td>\n                <td>{c.username}</td>\n                <td>{c.email}</td>\n                <td>\n                <button  onClick={(e)=>  this.handleDelete(e,c.pk) }> Delete</button>\n             <Link className=\"btn btn-primary\" to={{pathname:`/customer/${c.pk}/` }}>user 1</Link> / Update\n\n\n                {/*<a  href={\"/customer/\" + c.pk+\"/\"}> Update</a>*/}\n                </td>\n            </tr>)}\n            </tbody>\n            </table>\n            <button  className=\"btn btn-primary\"  onClick=  {  this.nextPage  }>Next</button>\n        </div>\n        );\n  }\n}\nexport  default  CustomersList;","import React, { Component } from 'react';\nimport CustomersService from './CustomersService';\n\nconst customersService = new CustomersService();\n\nclass CustomerCreateUpdate extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n\n      componentDidMount(){\n        const { match: { params } } = this.props;\n        if(params && params.pk)\n        {\n          customersService.getCustomer(params.pk).then((c)=>{\n            this.refs.username.value = c.username;\n            this.refs.email.value = c.email;\n          })\n        }\n      }\n\n      handleCreate(){\n        customersService.createCustomer(\n          {\n            \"username\": this.refs.username.value,\n            \"email\": this.refs.email.value,\n        }\n        ).then((result)=>{\n          alert(\"Customer created!\");\n        }).catch(()=>{\n          alert('There was an error! Please re-check your form.');\n        });\n      }\n      handleUpdate(pk){\n        customersService.updateCustomer(\n          {\n            \"pk\": pk,\n            \"username\": this.refs.username.value,\n            \"email\": this.refs.email.value,\n        }\n        ).then((result)=>{\n          console.log(result);\n          alert(\"Customer updated!\");\n        }).catch(()=>{\n          alert('There was an error! Please re-check your form.');\n        });\n      }\n      handleSubmit(event) {\n        const { match: { params } } = this.props;\n\n        if(params && params.pk){\n          this.handleUpdate(params.pk);\n        }\n        else\n        {\n          this.handleCreate();\n        }\n\n        event.preventDefault();\n      }\n\n      render() {\n        return (\n          <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <label>\n              Username:</label>\n              <input className=\"form-control\" type=\"text\" ref='firstName' />\n\n            <label>\n              Email:</label>\n              <input className=\"form-control\" type=\"text\" ref='email' />\n\n            <input className=\"btn btn-primary\" type=\"submit\" value=\"Submit\" />\n            </div>\n          </form>\n        );\n      }\n}\n\nexport default CustomerCreateUpdate;","import React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport {Link} from \"react-router-dom\";\n\nfunction InfoPageDetail({ match }) {\n\n    const [infopage, Setinfopage] = useState({})\n    const id = match.params.id\n\n    useEffect(() => {\n        axios({\n            method: \"GET\",\n            url: `http://127.0.0.1:8000/api/pages/${id}/`\n        }).then(response => {\n            Setinfopage(response.data)\n        })\n    }, [id])\n\n     return(\n<div className=\"App m-5\">\n\n    <div className=\"card\">\n        <div className=\"card-body\">\n            <h5 className=\"card-title\">{infopage.title}</h5>\n            <p className=\"card-text\">{infopage.content}</p>\n        </div>\n    </div>\n</div>\n    )\n}\n\nexport default InfoPageDetail;","import React from 'react';\nimport { withFormik, Form, Field, Formik } from 'formik';\nimport {withRouter} from \"react-router-dom\";\nimport * as Yup from 'yup';\n\nconst LoginPage = (props) => {\n  const loginPageStyle = {\n    margin: \"32px auto 37px\",\n    maxWidth: \"530px\",\n    background: \"#fff\",\n    padding: \"30px\",\n    borderRadius: \"10px\",\n    boxShadow: \"0px 0px 10px 10px rgba(0,0,0,0.15)\"\n  };\n\n  const  validationSchema = Yup.object().shape({\n    password: Yup.string().required('Password is required')\n  })\n\n  const handleSubmit = (values) => {\n    const REST_API_URL = \"http://127.0.0.1:8000/auth/token/login/\";\n    fetch(REST_API_URL, {\n      method: 'post',\n      body: JSON.stringify(values),\n      headers: {\n                'Content-Type': 'application/json',\n                }\n    }).then(response=> {\n      if (response.ok) {\n        return response.json();\n      } else {\n        // HANDLE ERROR\n        throw new Error('Something went wrong');\n      }\n    }).then(data => {\n      // HANDLE RESPONSE DATA\n      // console.log(data);\n      window.localStorage.setItem('tokens', data.auth_token);\n      props.history.push(\"/\")\n    }).catch((error) => {\n      // HANDLE ERROR\n      console.log(error);\n    });\n  }\n  // const { touched, errors } = props;\n  return(\n    <React.Fragment>\n      <div className=\"container\">\n        <div className=\"login-wrapper\" style={loginPageStyle}>\n          <h2>Login Page</h2>\n          <Formik\n       initialValues={{ username: '', password: \"\" }}\n       onSubmit={handleSubmit}\n       validationSchema={validationSchema}\n     >\n       {props => (\n          <Form className=\"form-container\">\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <Field type=\"text\" name=\"username\" id={\"username\"} className={\"form-control \"} placeholder=\"username\" />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <Field type=\"password\" name=\"password\" id={\"password\"} className={\"form-control \"} placeholder=\"Password\" />\n              { props.touched.password && props.errors.password && <span className=\"help-block text-danger\">{props.errors.password}</span> }\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary m-2\">Login</button>\n          </Form>)}\n             </Formik>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\n\n\nexport default withRouter(LoginPage);","import React from 'react';\nimport { withFormik, Form, Field, Formik } from 'formik';\nimport {withRouter} from \"react-router-dom\";\nimport * as Yup from 'yup';\n\nconst RegisterPage = (props) => {\n  const registerPageStyle = {\n    margin: \"32px auto 37px\",\n    maxWidth: \"530px\",\n    background: \"#fff\",\n    padding: \"30px\",\n    borderRadius: \"10px\",\n    boxShadow: \"0px 0px 10px 10px rgba(0,0,0,0.15)\"\n  };\n\n  const  validationSchema = Yup.object().shape({\n    password: Yup.string().required('Password is required'),\n    email: Yup.string().required('Email is required')\n  })\n\n\n  const handleSubmit = (values) => {\n    const REST_API_URL = \"http://127.0.0.1:8000/auth/users/\";\n    fetch(REST_API_URL, {\n      method: 'post',\n      body: JSON.stringify(values),\n      headers: {\n                'Content-Type': 'application/json',\n                }\n    }).then(response=> {\n      if (response.ok) {\n        return response.json();\n      } else {\n        // HANDLE ERROR\n        throw new Error('Something went wrong');\n      }\n    }).then(data => {\n      // HANDLE RESPONSE DATA\n      console.log(data);\n      props.history.push(\"/auth/token/login/\")\n    }).catch((error) => {\n      // HANDLE ERROR\n      console.log(error);\n    });\n  }\n  // const { touched, errors } = props;\n  return(\n    <React.Fragment>\n      <div className=\"container\">\n        <div className=\"login-wrapper\" style={registerPageStyle}>\n          <h2>Register Page</h2>\n          <Formik\n       initialValues={{ username: \"\",email: \"\", password: \"\" }}\n       onSubmit={handleSubmit}\n       validationSchema={validationSchema}\n       enableReinitialize\n     >\n       {props => (\n          <Form className=\"form-container\">\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <Field type=\"text\" name=\"username\" id={\"username\"} className={\"form-control \"} placeholder=\"username\" />\n              { props.touched.username && props.errors.username && <span className=\"help-block text-danger\">{props.errors.username}</span> }\n            </div>\n              <div className=\"form-group\">\n              <label htmlFor=\"email\">Email</label>\n              <Field type=\"text\" name=\"email\" id={\"email\"} className={\"form-control\"} placeholder=\"Email\" />\n              { props.touched.email && props.errors.email && <span className=\"help-block text-danger\">{props.errors.email}</span> }\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <Field type=\"password\" name=\"password\" id={\"password\"} className={\"form-control \"} placeholder=\"Password\" />\n              { props.touched.password && props.errors.password && <span className=\"help-block text-danger\">{props.errors.password}</span> }\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary m-2\">Register</button>\n          </Form>)}\n             </Formik>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\n\nexport default withRouter(RegisterPage);","import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Link} from 'react-router-dom';\n\n\nimport axios from 'axios';\n\nfunction Profile() {\n    const [user, Setuser] = useState({})\n    const tokens = localStorage.tokens;\n    useEffect(() => {\n\n        axios({\n            method: \"GET\",\n            headers: {\n                'Authorization': `Token ${tokens}`,\n                'Accept' : 'application/json',\n                'Content-Type': 'application/json'\n                },\n            url: `http://127.0.0.1:8000/api/account/`\n        }).then(response => {\n            console.log(response.data)\n            Setuser(response.data)\n        })\n    }, [])\n\n\n  return (\n<div className=\"container mt-5\">\n      <div className=\"page-content page-container ml-4 \" id=\"page-content\" key={user.id}>\n          <div className=\"padding mb-5\">\n              <div className=\"row container d-flex justify-content-center mb-5\">\n                  <div className=\"col-xl-6 col-md-12\">\n                      <div className=\"card user-card-full\">\n                          <div className=\"row m-l-0 m-r-0\">\n                              <div className=\"col-sm-4 bg-c-lite-green user-profile\">\n                                  <div className=\"card-block text-center text-white\">\n                                      <div className=\"m-b-5\">\n                                          <img\n                                          src=\"https://img.icons8.com/bubbles/100/000000/user.png\"\n                                          className=\"img-radius\" alt=\"User-Profile-Image\" />\n                                      </div>\n                                      <h6 className=\"f-w-600\"> </h6>\n                                      <p>Web </p> <i\n                                      className=\" mdi mdi-square-edit-outline feather icon-edit m-t-10 f-16\"> </i>\n                                  </div>\n                              </div>\n                              <div className=\"col-sm-8\">\n                                  <div className=\"card-block\">\n                                      <h6 className=\"m-b-20 p-b-5 b-b-default f-w-600 mb-5\">Information</h6>\n                                      <div className=\"row\">\n                                          <div className=\"col-sm-6\">\n                                              <p className=\"m-b-10 f-w-600\">Username</p>\n                                              <h6 className=\"text-muted f-w-400\">{user.username} </h6>\n                                          </div>\n                                          <div className=\"col-sm-6\">\n                                              <p className=\"m-b-10 f-w-600\">Email</p>\n                                              <h6 className=\"text-muted f-w-400\">{user.email} </h6>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Profile;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Table from \"./components/table/Table\";\nimport {BrowserRouter as Router, Switch, Route, RedirectProps, Redirect} from \"react-router-dom\";\nimport BoardDetail from \"./components/board_detail/BoardDetail\";\nimport MyNavbar from \"./components/navbar/navbar\";\nimport TopicDetail from \"./components/topic_detail/Topic\";\nimport Footer from \"./components/footer/footer\";\nimport CustomersList from \"./components/customers/CustomersList\";\nimport  CustomerCreateUpdate  from './components/customers/CustomerCreateUpdate'\nimport InfoPageDetail from \"./components/InfoPages/infopages\";\nimport LoginFormik from \"./components/auth/signUpform\";\nimport RegisterPage from \"./components/auth/registerForm\";\nimport Profile from \"./components/account/my_account\";\nimport NewTopic from \"./components/NewTopic/newtopic\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n <Router>\n    < MyNavbar />\n      <Switch>\n\n      <Route path=\"/auth/token/login/\" component={LoginFormik} />\n      <Route path=\"/auth/users/\" component={RegisterPage} />\n\n      <Route path=\"/pages/:id/\" component={InfoPageDetail} />\n      <Route path=\"/account/\" component={Profile} />\n\n      <Route path=\"/customer-list/\" exact component={CustomersList} />\n      <Route path=\"/customer/:pk/\"  component={CustomerCreateUpdate} />\n      <Route path=\"/customer/\" exact component={CustomerCreateUpdate} />\n\n        <Route path=\"/board/:id/topic/:pk/\" exect component={TopicDetail} />\n\n        <Route path=\"/board/:id/\" exect component={BoardDetail} />\n        <Route path=\"/board/:id/new/\"  component={NewTopic} />\n        <Route path=\"\" exect component={Table} />\n\n      </Switch>\n     < Footer />\n</Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}