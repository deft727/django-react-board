{"version":3,"sources":["components/table/Table.js","App.js","reportWebVitals.js","index.js"],"names":["Table","useState","boards","SetBoards","useEffect","axios","method","url","then","response","data","className","id","map","b","name","topics","href","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPA6EeA,MAvEf,WACE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAYA,OAXCC,qBAAU,WAELC,IAAM,CACFC,OAAQ,MACRC,IAAI,qCACLC,MAAK,SAAAC,GACJN,EAAUM,EAASC,WAExB,IAIH,qBAAKC,UAAU,MAAf,SAEC,wBAAOA,UAAU,2BAA2BC,GAAG,cAA/C,UACG,uBAAOD,UAAU,aAAjB,SACA,+BACE,uCACA,uCACA,wCACA,2CAEA,2CAIFT,EAAOW,KAAI,SAAAC,GAAC,OACZ,uBAAOH,UAAU,gBAAjB,SAEA,+BACE,+BACC,4BAAIG,EAAEF,KADP,IACe,wBAAOD,UAAU,qBAAjB,cAAwCG,EAAEC,KAA1C,UAEf,oBAAIJ,UAAU,eAAd,SACGG,EAAEE,SAEL,oBAAIL,UAAU,eAAd,SACKG,IAGL,qBAAIH,UAAU,eAAd,UAEE,gCACE,mBAAGM,KAAK,GAAR,sBAIF,uBAAON,UAAU,aAAjB,SACE,oDAMJ,2BA3BoCG,EAAEF,aCpBjCM,MAXf,WACE,OACE,qBAAKP,UAAU,MAAf,SAEA,cAAE,EAAF,OCIWQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3aac291d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\n\n\nfunction Table() {\n  const [boards, SetBoards] = useState([])\n   useEffect(() => {\n\n        axios({\n            method: \"GET\",\n            url: `http://127.0.0.1:8000/api/board/`\n        }).then(response => {\n            SetBoards(response.data)\n        })\n    }, [])\n\n\n  return (\n    <div className=\"App\">\n\n     <table className=\"table infinite-container\" id=\"board-table\">\n        <thead className=\"thead-dark\">\n        <tr>\n          <th>Board</th>\n          <th>Posts</th>\n          <th>Topics</th>\n          <th>Last Post</th>\n\n          <th>Edit</th>\n\n        </tr>\n        </thead>\n       {boards.map(b => (\n        <tbody className=\"infinite-item\" key={b.id}>\n\n        <tr>\n          <td>\n           <p>{b.id}</p> <small className=\"text-muted d-block\"> {b.name} </small>\n          </td>\n          <td className=\"align-middle\">\n            {b.topics}\n          </td>\n          <td className=\"align-middle\">\n              {b}\n          </td>\n\n          <td className=\"align-middle\">\n\n            <small>\n              <a href=\"\">\n                By  at\n              </a>\n            </small>\n            <small className=\"text-muted\">\n              <em>No posts yet.</em>\n            </small>\n\n          </td>\n\n\n          <td>\n\n          </td>\n\n        </tr>\n\n        </tbody>\n           ))}\n      </table>\n\n\n    </div>\n  );\n}\n\nexport default Table;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Table from \"./components/table/Table\";\nfunction App() {\n  return (\n    <div className=\"App\">\n\n    < Table />\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}